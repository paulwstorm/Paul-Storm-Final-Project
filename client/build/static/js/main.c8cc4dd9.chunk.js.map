{"version":3,"sources":["actions/index.js","components/dictionaryEntry.js","components/header.js","components/postCards.js","components/intros/posts.js","components/posts.js","components/selectLevel.js","components/login.js","components/postClozeCards.js","components/postClozes.js","components/userPage.js","components/userClozes.js","components/wordCards.js","components/userWords.js","components/wordCardsStudy.js","components/userWordsStudy.js","reducers/postsReducer.js","reducers/clozeReducer.js","reducers/index.js","reducers/postCountReducer.js","reducers/viewNumReducer.js","reducers/searchTermReducer.js","reducers/searchResultReducer.js","reducers/wordReducer.js","reducers/userReducer.js","index.js"],"names":["GET_POSTS","GET_POST_CLOZES","INCREMENT_POST_COUNT","DECREMENT_POST_COUNT","SET_VIEW_NUM","REMOVE_GUESSED_CLOZE","WORD_SEARCH","NEW_SEARCH_TERM","GET_USER_CLOZES","GET_WORDS","GET_USER","getUser","user","axios","get","withCredentials","type","payload","addRoomToUser","room","roomToSend","post","getPosts","viewNum","startPost","posts","getPostClozes","a","clozes","getUserClozes","view","userClozes","getWords","words","incrementPostNumber","amount","decrementPostNumber","markClozeCorrect","mark","cloze","markedCloze","lastAttempt","lastAttemptDate","Date","clozesMinusMarked","filter","c","postContent","addClozeToUser","postClozedTokenizedContent","postTokenizedContent","multipleChoiceWords","removedWord","wordSearch","word","language","searchResult","addWordToUserDict","put","newSearchTerm","searchTerm","DictionaryEntry","state","searchLanguage","wordOnClick","bind","this","props","alert","simplified","length","Row","className","value","onChange","event","target","setState","console","log","map","entry","index","entryNum","Col","s","class","onClick","onEntryClick","pinyin","partOfSpeech","english","Component","connect","actions","Header","show","Modal","id","size","onHide","Body","to","PostCards","postImageUrl","sm","renderPostWords","xs","src","onError","e","onerror","postSource","md","Card","href","postUserUrl","Image","roundedCircle","fluid","postUserImageUrl","postUser","postLevel","dateRetrieved","slice","addClozeButton","postUrl","renderContentImage","renderPosts","IntroPosts","Posts","showIntroModal","Object","keys","visited","includes","Button","window","scrollTo","prps","checkNewUser","renderButtons","SelectLevel","action","method","name","variant","block","Login","PostClozeCards","showDict","showIncorrect","showCorrect","guessedCloze","guessed","answer","setTimeout","checkCorrect","showGuessedCloze","PostClozes","UserPage","UserClozes","incorrectButton","allButton","handleToggleClick","WordCards","traditional","renderWord","UserWords","wordBack","UserWordsStudy","shuffle","j","x","i","Math","floor","random","rootReducer","combineReducers","data","newState","clozedPosts","undefined","push","incrementState","decrementState","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","store","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.c8cc4dd9.chunk.js","sourcesContent":["import axios from \"axios\"\n\n// const ROOT_URL = \"http://localhost:5005\"\n\nexport const GET_POSTS = 'get_posts'\nexport const GET_POST_CLOZES = \"get_post_clozes\"\nexport const INCREMENT_POST_COUNT = \"increment_post_count\"\nexport const DECREMENT_POST_COUNT = \"decrement_post_count\"\nexport const SET_VIEW_NUM = \"set_view_num\"\nexport const REMOVE_GUESSED_CLOZE = \"remove_guessed_cloze\"\nexport const WORD_SEARCH = \"word_search\"\nexport const NEW_SEARCH_TERM = \"new_search_term\"\nexport const GET_USER_CLOZES = \"get_users_clozes\"\nexport const GET_WORDS = \"get_words\"\nexport const GET_USER = \"get_user\"\n\nexport function getUser() {\n    const user = axios.get(`/backend/userinfo`, {withCredentials: true})\n\n    return {\n        type: GET_USER,\n        payload: user\n    }\n}\n\nexport function addRoomToUser(room) {\n    const roomToSend = {room:room}\n    const user = axios.post(`/backend/userinfo`, roomToSend, {withCredentials: true})\n\n    return {\n        type: GET_USER,\n        payload: user\n    }\n}\n\nexport function getPosts(viewNum, startPost) {\n    const posts = axios.get(`/backend/posts?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_POSTS,\n        payload: posts\n    }\n}\n\nexport async function getPostClozes(viewNum, startPost) {\n    const clozes = await axios.get(`/backend/posts/clozes?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_POST_CLOZES,\n        payload: clozes\n    }\n}\n\nexport function getUserClozes(viewNum, startPost, view) {\n    const userClozes = axios.get(`/backend/user/clozes?viewNum=${viewNum}&startPost=${startPost}&view=${view}`, {withCredentials: true})\n\n    return {\n        type: GET_USER_CLOZES,\n        payload: userClozes\n    }\n}\n\nexport async function getWords(viewNum, startPost, view) {\n    const words = await axios.get(`/backend/user/words?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_WORDS,\n        payload: words\n    }\n}\n\nexport function incrementPostNumber(amount) {\n    return {\n        type: INCREMENT_POST_COUNT,\n        payload: amount\n    }\n}\n\nexport function decrementPostNumber(amount) {\n    return {\n        type: DECREMENT_POST_COUNT,\n        payload: amount\n    }\n}\n\nexport function markClozeCorrect(mark, cloze, clozes) {\n    let markedCloze = cloze\n    markedCloze.lastAttempt = mark\n    markedCloze.lastAttemptDate = new Date()\n\n    const postMarkedCloze = axios.post(`/backend/posts/clozes`, markedCloze, {withCredentials: true})\n\n    let clozesMinusMarked = clozes.filter(c => {\n        return c.postContent != cloze.postContent\n    })\n\n    return {\n        type: REMOVE_GUESSED_CLOZE,\n        payload: clozesMinusMarked\n    }\n}\n\nexport function addClozeToUser(cloze) {\n    let markedCloze = cloze\n    markedCloze.lastAttempt = \"incorrect\"\n    markedCloze.lastAttemptDate = new Date()\n    markedCloze.postClozedTokenizedContent = cloze.postTokenizedContent\n    markedCloze.multipleChoiceWords = []\n    markedCloze.removedWord = \"\"\n\n    const postMarkedCloze = axios.post(`/backend/posts/clozes`, markedCloze, {withCredentials: true})\n\n    return postMarkedCloze \n}\n\nexport function wordSearch(word, language) {\n    const searchResult = axios.get(`/backend/wordsearch?query=${word}&lang=${language}`, {withCredentials: true})\n\n    return {\n        type: WORD_SEARCH,\n        payload: searchResult\n    }\n\n}\n\nexport function addWordToUserDict(word) {\n    const addWord = axios.put(axios.post(`/backend/addWordToDict`, word, {withCredentials: true}))\n\n    return addWord\n}\n\nexport function newSearchTerm(searchTerm) {\n    return {\n        type: NEW_SEARCH_TERM,\n        payload: searchTerm\n    }\n}","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal'\nimport './dictionaryEntry.css'\nimport * as actions from \"../actions/index.js\"\n\nclass DictionaryEntry extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            searchLanguage: \"Chinese\"\n        }\n\n        this.wordOnClick = this.wordOnClick.bind(this)\n    }\n\n    componentDidMount() {\n        this.props.wordSearch(this.props.searchTerm, this.state.searchLanguage)\n    }\n\n    onEntryClick(word) {\n        this.props.addWordToUserDict(word)\n        alert(`${word.simplified} added to your dictionary!`)\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm, this.state.searchLanguage)\n    }\n\n    render() {\n        if (this.props.word.length == 0 ) {\n            return (\n                <div>\n                    <Row className=\"dictionary-top\">\n                        <h4 className=\"dictionary-title\">Search the Dictionary:</h4>\n                        <span>\n                            <form className=\"input-group search-bar\">\n                                <input\n                                    className=\"search-term\"\n                                    value={this.props.searchTerm}\n                                    onChange={(event) => {this.wordOnClick(event.target.value)}}\n                                />\n                                <select className=\"language-dropdown\" onChange={event => {this.setState({ searchLanguage: event.target.value })}}>\n                                    <option value=\"Chinese\">Chinese</option>\n                                    <option value=\"English\">English</option>\n                                </select>\n                            </form>\n                        </span>\n                    </Row>\n                    <div>searching the dictionary...</div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Row className=\"dictionary-top\">\n                        <h4 className=\"dictionary-title\">Search the Dictionary:</h4>\n                        <span>\n                            <form className=\"input-group search-bar\">\n                                <input\n                                    value={this.props.searchTerm}\n                                    onChange={(event) => {console.log(event.target.value);this.wordOnClick(event.target.value)}}\n                                />\n                                <select className=\"category-dropdown\" onChange={event => {this.setState({ searchLanguage: event.target.value })}}>\n                                    <option value=\"Chinese\">Chinese</option>\n                                    <option value=\"English\">English</option>\n                                </select>\n                            </form>\n                        </span>\n                    </Row>\n                    {\n                    this.props.word.map((entry, index) => {\n                        let entryNum = index + 1\n                        return (\n                            <div className=\"entry\">\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"simplified-traditional\">\n                                            <span className= \"entry-num\">{entryNum}.</span>\n                                            <span className=\"simplified-char\">Character: {entry.simplified}</span>\n                                            {/* <span className=\"traditional-char\">({entry.traditional})</span> */}\n                                            <span class=\"material-icons add-word\" onClick={() => {this.onEntryClick(entry)}}>add_circle_outline</span>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"pinyin\">\n                                        Pronunciation: {entry.pinyin}\n                                        </div>\n                                        <div className=\"entry-POS\">\n                                            Part of Speech: {entry.partOfSpeech}\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"english-definition\">\n                                            Definition: {entry.english}\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n            )\n        }\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        word: state.searchResult,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(DictionaryEntry)","import React from 'react';\nimport { Component} from 'react'\nimport { Link } from \"react-router-dom\"\nimport './header.css'\nimport Modal from 'react-bootstrap/Modal'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\n\nclass Header extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                <div className=\"header\">\n                    <Link to={\"/user\"}><span className=\"user-icon\"><i class=\"fas fa-user fa-1x\"></i></span></Link>\n                    <Link to={\"/posts\"}><span className=\"header-text\">Cloze Weibo</span></Link>\n                    <span className=\"search-icon\"><i class=\"fas fa-search fa-1x\" onClick={() => {this.setState({show:true})}}></i></span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col, ModalBody } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport Modal from 'react-bootstrap/Modal'\nimport './postCards.css'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass PostCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false\n        }\n    }\n\n    renderPostWords(postContent) {\n        return (\n            postContent.map(word => {\n                return <span onClick={() => {this.setState({show: true}); this.wordOnClick(word[0])}}>{ word[0] }</span>\n            })\n        )\n    }\n\n    addClozeButton(post) {\n        this.props.addClozeToUser(post)\n        alert(\"Post added for study!\")\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm)\n    }\n\n    renderContentImage(post) {\n        if (post.postImageUrl.length == 0) {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col sm={1}></Col>\n                    <Col sm={10}><div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div></Col>\n                    <Col sm={1}></Col>\n                </Row>\n            )\n        } else {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col xs={8}><div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div></Col>\n                    <Col xs={4}><img className=\"zhihuImage\" src={post.postImageUrl} onError={(e)=>{e.target.onerror = null; e.target.src=\"http://pic.51yuansu.com/pic/cover/00/05/24/5736985738490_610.jpg\"}} /></Col>\n                </Row>\n            )\n        }\n    }\n\n    renderPosts(post) {\n        if (post.postSource == \"weibo\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={8}>\n                                            <div className=\"user\">\n                                                <a href={`https://www.weibo.com/${post.postUserUrl}`} target='_blank'>\n                                                        <Image className=\"userImage\" roundedCircle fluid src={post.postUserImageUrl} />\n                                                        <span>{post.postUser}</span>\n                                                </a>\n                                            </div>\n                                        </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={2} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-weibo fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    <div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div>\n                                    <Row className=\"cardBotom\">     \n                                            <Col xs={6}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                            <Col xs={6}><span class=\"addCloze\" onClick={() => {this.addClozeButton(post)}}>Save Post</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource == \"zhihu_recommended\" || post.postSource == \"zhihu_hot\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                Zhihu Question:\n                                            </a>   \n                                         </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={2} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"cardBotom\">                                    \n                                        <Col xs={6}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                        <Col xs={6}><span class=\"addCloze\" onClick={() => {this.addClozeButton(post)}}>Save Post</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource.slice(0,6) == \"wangyi\" || post.postSource.slice(0,7) == \"toutiao\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                News Article:\n                                            </a>   \n                                         </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={3} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                        <div className=\"postContent\">\n                                            { this.renderContentImage(post)}\n                                        </div>\n                                    <Row className=\"cardBotom\">                                    \n                                        <Col xs={6}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                        <Col xs={6}><span class=\"addCloze\" onClick={() => {this.addClozeButton(post)}}>Save Post</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                {this.props.posts.map(post => (this.renderPosts(post)))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostCards)\n\n    ","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './intro.css'\n\n\n\nclass IntroPosts extends Component {\n    render() {\n        return (\n            <div>\n                <h3 className=\"intro-header\">Welcome to Posts!</h3>\n                <p className=\"intro-paragraph\">On this page you can see read of the recent posts tailored to your reading level!</p>\n                <p className=\"intro-paragraph\">These posts come from various Chinese social media and news outlets</p>\n            </div>\n        )\n    }\n}\n\nexport default IntroPosts","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './posts.css'\nimport Header from \"./header.js\"\nimport PostCards from \"./postCards.js\"\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport IntroPosts from \"./intros/posts.js\"\n\n\nclass Posts extends Component{\n    constructor() {\n        super()\n\n        this.state = {\n            viewNum: 10,\n            startPost: 0,\n            showIntroModal: false\n        }\n    }\n\n    async componentDidMount() {\n        this.props.getPosts(this.props.viewNum, this.props.startPost)\n        await this.props.getUser()\n    }\n\n    async checkNewUser() {\n        if (Object.keys(this.props.user).length > 0) {\n            if ((!this.props.user.visited.includes(\"/posts\")) && (this.state.showIntroModal == false)) {\n                console.log(\"Inside\")\n                this.setState({showIntroModal: true})\n                await this.props.addRoomToUser(\"/posts\")\n            }\n        }\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-less-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-more-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-more-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-less-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        this.checkNewUser()\n        if (this.props.posts.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Posts!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Modal\n                        className=\"intro-modal\"\n                        size={\"s\"} \n                        show={this.state.showIntroModal} \n                        onHide={() => {this.setState({showIntroModal:false})}}>\n                            <Modal.Body class=\"dictionary-body\">\n                                <IntroPosts></IntroPosts>\n                            </Modal.Body>\n                        </Modal>\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"posts-read-posts\" href=\"/posts/\">Read</Button>\n                                    <Button className=\"posts-cloze-posts\" href=\"/posts/clozes\">Challenge</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts,\n        viewNum: state.viewNum,\n        startPost: state.startPost,\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, actions)(Posts)","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport './selectLevel.css'\nimport Header from \"./header.js\"\n\nclass SelectLevel extends Component{\n  render() {\n    return (\n      <div>\n       <Header />        \n        <Row>\n          <Col xs = {3}></Col>\n          <Col xs = {6}>\n            <p className=\"selectLevelTitle\">Welcome 欢迎光临!</p>\n            <div className=\"intro-paragraph\">\n              <span>To begin reading posts, please select the level that corresponds to your </span>\n              <a className=\"HSK-link\" href=\"https://en.wikipedia.org/wiki/Hanyu_Shuiping_Kaoshi\" target=\"_blank\">HSK</a>\n              <span> level and we'll provide content appropriate for you!</span>\n            </div> \n          </Col>\n          <Col xs = {3}></Col>\n        </Row>\n        <Row>\n          <Col xs = {4}></Col>\n          <Col xs = {4}>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"1\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 1</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"2\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 2</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"3\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 3</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"4\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 4</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"5\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 5</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"6\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 6</Button>\n            </form>\n          </Col>\n          <Col xs = {4}></Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default SelectLevel;","import React from 'react';\nimport { Component } from 'react'\nimport './login.css'\n\nclass Login extends Component{\n  render() {\n    return (\n      <div>\n       <h3>Logged In</h3>\n       <a href=\"http://localhost:5005/test\">click here!</a>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col } from 'react-bootstrap'\nimport './postClozeCards.css'\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\n\nclass PostClozeCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            showDict: false,\n            showIncorrect: false,\n            showCorrect: false,\n            guessedCloze: {},\n            searchTerm: \"\"\n        }\n\n        this.wordOnClick = this.wordOnClick.bind(this)\n    }\n\n    async checkCorrect(guessed, answer, cloze) {\n        if (guessed == answer) {\n            let mark=\"correct\"\n            this.props.markClozeCorrect(mark, cloze, this.props.clozes)\n            this.setState({showCorrect: true})\n            setTimeout(() => {this.setState({showCorrect: false})}, 1000)\n        } else {\n            let mark=\"incorrect\"\n            this.props.markClozeCorrect(mark, cloze, this.props.clozes)\n            await this.setState({guessedCloze: cloze}, this.setState({showIncorrect: true}))\n        }\n    }\n\n    renderPostWords(postContent) {\n        return (\n            postContent.map(word => {\n                return <span onClick={() => {this.setState({showDict: true}); this.wordOnClick(word[0])}}>{ word[0] }</span>\n            })\n        )\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm)\n    }\n\n    renderContentImage(post) {\n        if (post.postImageUrl.length == 0) {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col sm={1}></Col>\n                    <Col sm={10}><div>{ this.renderPostWords(post.postClozedTokenizedContent) }</div></Col>\n                    <Col sm={1}></Col>\n                </Row>\n            )\n        } else {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col xs={8}><div>{ this.renderPostWords(post.postClozedTokenizedContent) }</div></Col>\n                    <Col xs={4}><img className=\"zhihuImage\" src={post.postImageUrl} onError={(e)=>{e.target.onerror = null; e.target.src=\"http://pic.51yuansu.com/pic/cover/00/05/24/5736985738490_610.jpg\"}} /></Col>\n                </Row>\n            )\n        }\n    }\n\n    showGuessedCloze() {\n        console.log(\"this.state\", this.state)\n        return (\n            <div className=\"show-incorrect\">\n                <div>The correct answer is</div>\n                <div>{this.state.guessedCloze.removedWord}</div>\n                <br/>\n                <div>Full post: </div>\n                <div>{this.state.guessedCloze.postContent}</div>\n            </div>\n        )\n    }\n\n    showCorrect() {\n        return (\n            <div>\n                <i class=\"fas fa-check fa10x\"></i>\n                <div>Correct!</div>\n            </div>\n        )\n    }\n\n    renderPosts(post) {\n        if (post.postSource == \"weibo\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <div className=\"user\">\n                                                <a href={`https://www.weibo.com/${post.postUserUrl}`} target='_blank'>\n                                                        <Image className=\"userImage\" roundedCircle fluid src={post.postUserImageUrl} />\n                                                        <span>{post.postUser}</span>\n                                                </a>\n                                            </div>\n                                        </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={3} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-weibo fa-1x\"></i>\n                                        </Col>\n                                    </Row>                                 \n                                    <div className=\"postContent\">{ this.renderPostWords(post.postClozedTokenizedContent) }</div>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource == \"zhihu_recommended\" || post.postSource == \"zhihu_hot\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                Zhihu Question:\n                                            </a>   \n                                         </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={3} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource.slice(0,6) == \"wangyi\" || post.postSource.slice(0,7) == \"toutiao\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                News Article:\n                                            </a>   \n                                         </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={3} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.showDict} \n                onHide={() => {this.setState({showDict:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                <Modal\n                className=\"cloze-modal\"\n                id=\"cloze-modal\"\n                size={\"s\"} \n                show={this.state.showIncorrect} \n                onHide={() => {this.setState({showIncorrect:false})}}>\n                    <Modal.Body class=\"show-incorrect-body\">\n                        {this.showGuessedCloze()}\n                    </Modal.Body>\n                </Modal>\n                <Modal\n                className=\"correct-modal\"\n                id=\"correct-modal\"\n                size={\"s\"} \n                show={this.state.showCorrect} \n                onHide={() => {this.setState({showCorrect:false})}}>\n                    <Modal.Body class=\"show-incorrect-body\">\n                        {this.showCorrect()}\n                    </Modal.Body>\n                </Modal>\n                {this.props.clozes.map(post => (this.renderPosts(post)))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostClozeCards)\n\n    ","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './postClozes.css'\nimport Header from \"./header.js\"\nimport PostClozeCards from \"./postClozeCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass PostClozes extends Component{\n    componentDidMount() {\n        this.props.getPostClozes(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                <Col xs={2}></Col>\n                    <Col xs={8}>\n                        <Button className=\"lposts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                    </Col>\n                <Col xs={2}></Col>\n            </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.clozes.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Clozes!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"posts-clozes-read-posts\" href=\"/posts/\">Read</Button>\n                                    <Button className=\"posts-clozes-cloze-posts\" href=\"/posts/clozes\">Challenge</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostClozeCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostClozes)","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport './userPage.css'\nimport Header from \"./header.js\"\n\nclass UserPage extends Component{\n    render() {\n        return (\n            <div>\n            <Header />\n                <Row>\n                    <Col xs={4}></Col>\n                    <Col className={\"user-page-buttons\"} xs={4}>\n                        <div><Button className={\"my-clozes\"} href=\"/user/clozes\"> My Clozes</Button></div>\n                        <div><Button className={\"my-words\"} href=\"/user/words\">My Words</Button></div>\n                    </Col>\n                    <Col xs={4}></Col>\n                </Row>\n            </div>\n        )\n    }\n\n}\n\nexport default UserPage","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userClozes.css'\nimport Header from \"./header.js\"\nimport PostClozeCards from \"./postClozeCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserClozes extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false,\n            view: \"incorrect\",\n            incorrectButton: \"button-on\",\n            allButton: \"button-off\"\n        }\n    }\n\n    componentDidMount() {\n        this.props.getUserClozes(this.props.viewNum, this.props.startPost, this.state.view)\n    }\n\n    async handleToggleClick(view) {\n        await this.setState({view: view})\n        this.props.getUserClozes(this.props.viewNum, this.props.startPost, this.state.view)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getUserClozes(this.props.viewNum, (this.props.startPost + 10), this.state.view); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                <Col xs={2}></Col>\n                    <Col xs={8}>\n                        <Button className=\"lposts-clozes-less-posts\" onClick={event => { this.props.getUserClozes(this.props.viewNum, (this.props.startPost - 10), this.state.view); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                    </Col>\n                <Col xs={2}></Col>\n            </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.clozes.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={2}></Col>\n                            <Col xs={8}>\n                                <Button className={this.state.incorrectButton} onClick={() => {this.handleToggleClick(\"incorrect\"); this.setState({allButton: \"button-off\"}); this.setState({incorrectButton: \"button-on\"})}}>Incorrect</Button>\n                                <Button className={this.state.allButton} onClick={() => {this.handleToggleClick(\"all\"); this.setState({incorrectButton: \"button-off\"}); this.setState({allButton: \"button-on\"})}}>All</Button>\n                            </Col>\n                        <Col xs={2}></Col>\n                    </Row>  \n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">See your saved posts here!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className={this.state.incorrectButton} onClick={() => {this.handleToggleClick(\"incorrect\"); this.setState({allButton: \"button-off\"}); this.setState({incorrectButton: \"button-on\"})}}>Incorrect</Button>\n                                    <Button className={this.state.allButton} onClick={() => {this.handleToggleClick(\"all\"); this.setState({incorrectButton: \"button-off\"}); this.setState({allButton: \"button-on\"})}}>All</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostClozeCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserClozes)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col, ModalBody } from 'react-bootstrap'\nimport './wordCards.css'\n\nclass WordCards extends Component{\n\n    renderWord(word) {\n        return (\n            <div className=\"word-card\">\n                <Row>\n                    <Col s={12}>\n                        <div className=\"simplified-traditional\">\n                            <span className=\"word-simplified-char\">Character: {word.simplified}</span>\n                            <span className=\"traditional-char\">  ({word.traditional})</span>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col s={12}>\n                        <div className=\"word-pinyin\">\n                        Pronunciation: {word.pinyin}\n                        </div>\n                        <div className=\"word-POS\">\n                            Part of Speech: {word.partOfSpeech}\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col s={12}>\n                        <div className=\"word-english-definition\">\n                            Definition: {word.english}\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.words.map(word => this.renderWord(word))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words    \n    }\n}\n\n\nexport default connect(mapStateToProps)(WordCards)\n\n    ","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userWords.css'\nimport Header from \"./header.js\"\nimport WordCards from \"./wordCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserWords extends Component {\n    componentDidMount() {\n        this.props.getWords(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.words.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Words!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"words-read-words\" href=\"/user/words\">Read</Button>\n                                    <Button className=\"words-study-words\" href=\"/user/words/study\">Study</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <WordCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserWords)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Card, Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal'\nimport './wordCardsStudy.css'\n\nclass WordCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            wordBack: {},\n            show: false\n        }\n    }\n\n    renderWord(word) {\n        return (\n            <Row>\n                <Col s={10}>\n                    <div>\n                        <Row>\n                            <Col md={2}></Col>\n                            <Col md={8}>\n                                <Card className=\"word-study-card\" onClick={event => {this.setState({ wordBack: word}); this.setState({show: true})}}>\n                                    <div class=\"card-body\">\n                                        {word.simplified}\n                                    </div>\n                                </Card>\n                            </Col>\n                            <Col md={2}></Col>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>    \n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"word-modal\"\n                id=\"word-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"word-body\">\n                        <div className=\"word-back-card\">\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"simplified-traditional\">\n                                        <span className=\"word-simplified-char\">Character: {this.state.wordBack.simplified}</span>\n                                        <span className=\"traditional-char\">  ({this.state.wordBack.traditional})</span>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"word-pinyin\">\n                                    Pronunciation: {this.state.wordBack.pinyin}\n                                    </div>\n                                    <div className=\"word-POS\">\n                                        Part of Speech: {this.state.wordBack.partOfSpeech}\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"word-english-definition\">\n                                        Definition: {this.state.wordBack.english}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                {this.props.words.map(word => this.renderWord(word))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words    \n    }\n}\n\n\nexport default connect(mapStateToProps)(WordCards)\n\n    ","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userWordsStudy.css'\nimport Header from \"./header.js\"\nimport WordCardsStudy from \"./wordCardsStudy.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserWordsStudy extends Component {\n    componentDidMount() {\n        this.props.getWords(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.words.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Words!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"study-read-words\" href=\"/user/words\">Read</Button>\n                                    <Button className=\"study-study-words\" href=\"/user/words/study\">Study</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <WordCardsStudy />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserWordsStudy)","import { GET_POSTS } from \"../actions/index.js\"\nimport { array } from \"prop-types\";\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n  }\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_POSTS:\n            console.log(\"in postsReducer: \", action)\n            state = []\n            state = action.payload.data\n            state = shuffle(state)\n            return state\n        default:\n            console.log(\"in postsReducer: \", action)\n            return state\n    }\n}","import { GET_POST_CLOZES, REMOVE_GUESSED_CLOZE, GET_USER_CLOZES } from \"../actions/index.js\"\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n  }\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_POST_CLOZES:\n            let newState = []\n            newState = action.payload.data\n            console.log(newState.clozedPosts[9])\n            if (newState.clozedPosts == undefined) {\n                newState = []\n                return newState\n            } else {\n                for (var i = 0; i < newState.posts.length; i ++) {\n                    newState.posts[i].postClozedTokenizedContent = newState.clozedPosts[i][0]\n                    let multipleChoiceWords = newState.clozedPosts[i][2]\n                    multipleChoiceWords.push(newState.clozedPosts[i][1][0])\n                    let removedWord = newState.clozedPosts[i][1]\n                    newState.posts[i].removedWord = removedWord[0]\n                    multipleChoiceWords = shuffle(multipleChoiceWords)\n                    newState.posts[i].multipleChoiceWords = multipleChoiceWords\n                }\n                return newState.posts\n            }\n        case GET_USER_CLOZES:\n                state = action.payload.data\n                if (state.clozedPosts == undefined) {\n                    state = []\n                    return state\n                } else {\n                    for (var i = 0; i < state.posts.length; i ++) {\n                        state.posts[i].postClozedTokenizedContent = state.clozedPosts[i][0]\n                        let removedWord = state.clozedPosts[i][1]\n                        let multipleChoiceWords = state.clozedPosts[i][2]\n                        multipleChoiceWords.push(state.clozedPosts[i][1][0])\n                        state.posts[i].removedWord = removedWord[0]\n                        multipleChoiceWords = shuffle(multipleChoiceWords)\n                        state.posts[i].multipleChoiceWords = multipleChoiceWords\n                    }\n                    return state.posts\n                }\n        case REMOVE_GUESSED_CLOZE:\n            let stateClozeRemove = []\n            stateClozeRemove = action.payload\n            return stateClozeRemove\n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\"\nimport PostsReducer from \"./postsReducer\"\nimport ViewNumReducer from \"./viewNumReducer\"\nimport PostCountReducer from \"./postCountReducer\"\nimport ClozeReducer from \"./clozeReducer\"\nimport SearchResultReducer from \"./searchResultReducer\"\nimport SearchTermReducer from \"./searchTermReducer\"\nimport WordReducer from \"./wordReducer\"\nimport UserReducer from \"./userReducer\"\n\nconst rootReducer = combineReducers({\n    posts: PostsReducer,\n    clozes: ClozeReducer,\n    startPost: PostCountReducer,\n    viewNum: ViewNumReducer,\n    searchTerm: SearchTermReducer,\n    searchResult: SearchResultReducer,\n    words: WordReducer,\n    user: UserReducer\n})\n\nexport default rootReducer","import { INCREMENT_POST_COUNT, DECREMENT_POST_COUNT } from \"../actions/index.js\"\n\nexport default function(state = 0, action) {\n    switch (action.type) {\n        case INCREMENT_POST_COUNT:\n            let incrementState = state + action.payload\n            return incrementState\n        case  DECREMENT_POST_COUNT:\n            let decrementState = state - action.payload\n            return decrementState\n        default:\n            return state\n    }\n\n}\n\n","import { SET_VIEW_NUM } from \"../actions/index\"\n\nexport default function(state = 10, action) {\n    switch (action.type) {\n        case SET_VIEW_NUM:\n            let newState = action.payload\n        default:\n            return state\n    }\n}","import { NEW_SEARCH_TERM } from \"../actions/index.js\"\n\nexport default function(state = \"\", action) {\n    switch(action.type) {\n        case NEW_SEARCH_TERM:\n            state = action.payload\n            return state\n        default:\n            return state\n    }\n}","import { WORD_SEARCH } from \"../actions/index.js\"\n\nexport default function(state = [], action) {\n    switch(action.type) {\n        case WORD_SEARCH:\n            state = action.payload.data\n            return state\n        default:\n            return state\n    }\n}","import { GET_WORDS } from \"../actions/index.js\"\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_WORDS:\n            state = action.payload.data\n            console.log(action.payload.data)\n            return state\n        default:\n            return state\n    }\n}","import { GET_USER } from \"../actions/index.js\"\n\nexport default function(state = {}, action) {\n    switch (action.type){ \n        case GET_USER:\n            state = action.payload.data\n            console.log(state)\n            return state\n        default:\n            return state\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport promise from \"redux-promise\";\nimport Posts from \"./components/posts.js\"\nimport SelectLevel from \"./components/selectLevel.js\"\nimport Login from \"./components/login.js\"\nimport PostClozes from \"./components/postClozes.js\"\nimport './index.css'\nimport UserPage from \"./components/userPage\"\nimport UserClozes from \"./components/userClozes\"\nimport UserWords from \"./components/userWords\"\nimport UserWordsStudy from \"./components/userWordsStudy\"\n\nimport rootReducer from \"./reducers/index.js\";\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(rootReducer)}>\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={SelectLevel} />\n          <Route exact path=\"/test\" component={Login} />\n          <Route exact path=\"/posts\" component={Posts} />\n          <Route exact path=\"/posts/clozes\" component={PostClozes} />\n          <Route exact path=\"/user\" component={UserPage} />\n          <Route exact path=\"/user/clozes\" component={UserClozes} />\n          <Route exact path=\"/user/words\" component={UserWords} />\n          <Route exact path=\"/user/words/study\" component={UserWordsStudy} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}