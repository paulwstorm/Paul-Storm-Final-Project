{"version":3,"sources":["actions/index.js","components/dictionaryEntry.js","components/header.js","components/postCards.js","components/intros/posts.js","components/posts.js","components/selectLevel.js","components/login.js","components/postClozeCards.js","components/intros/clozes.js","components/postClozes.js","components/intros/user.js","components/userPage.js","components/intros/userClozes.js","components/userClozes.js","components/wordCards.js","components/intros/userWords.js","components/userWords.js","components/wordCardsStudy.js","components/userWordsStudy.js","reducers/postsReducer.js","reducers/clozeReducer.js","reducers/index.js","reducers/postCountReducer.js","reducers/viewNumReducer.js","reducers/searchTermReducer.js","reducers/searchResultReducer.js","reducers/wordReducer.js","reducers/userReducer.js","index.js"],"names":["GET_POSTS","GET_POST_CLOZES","INCREMENT_POST_COUNT","DECREMENT_POST_COUNT","SET_VIEW_NUM","REMOVE_GUESSED_CLOZE","WORD_SEARCH","NEW_SEARCH_TERM","GET_USER_CLOZES","GET_WORDS","GET_USER","getUser","user","axios","get","withCredentials","type","payload","addRoomToUser","room","roomToSend","post","getPosts","viewNum","startPost","posts","getPostClozes","a","clozes","getUserClozes","view","userClozes","getWords","words","incrementPostNumber","amount","decrementPostNumber","markClozeCorrect","mark","cloze","markedCloze","lastAttempt","lastAttemptDate","Date","clozesMinusMarked","filter","c","postContent","addClozeToUser","postClozedTokenizedContent","postTokenizedContent","multipleChoiceWords","removedWord","wordSearch","word","language","console","log","searchResult","addWordToUserDict","put","newSearchTerm","searchTerm","DictionaryEntry","state","searchLanguage","wordOnClick","bind","intitialSearch","initialSearch","this","props","setTimeout","alert","simplified","length","Row","className","value","onChange","event","target","setState","map","entry","index","entryNum","Col","s","class","onClick","onEntryClick","pinyin","partOfSpeech","english","Component","connect","actions","Header","show","Object","keys","to","userNotSignedIn","Modal","id","size","onHide","Body","PostCards","postImageUrl","sm","renderPostWords","xs","src","onError","e","onerror","postSource","md","Card","href","postUserUrl","Image","roundedCircle","fluid","postUserImageUrl","postUser","postLevel","dateRetrieved","slice","addClozeButton","postUrl","renderContentImage","renderPosts","IntroPosts","Posts","showIntroModal","visited","includes","Button","window","scrollTo","prps","checkNewUser","renderButtons","SelectLevel","action","method","name","variant","block","Login","PostClozeCards","showDict","showIncorrect","showCorrect","guessedCloze","guessed","answer","checkCorrect","showGuessedCloze","IntroClozes","PostClozes","UserPage","IntroUserClozes","UserClozes","incorrectButton","allButton","handleToggleClick","WordCards","traditional","renderWord","IntroUserWords","UserWords","wordBack","UserWordsStudy","shuffle","j","x","i","Math","floor","random","rootReducer","combineReducers","data","newState","clozedPosts","undefined","push","incrementState","decrementState","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","store","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.2d7c483a.chunk.js","sourcesContent":["import axios from \"axios\"\n\n// const ROOT_URL = \"http://localhost:5005\"\n\nexport const GET_POSTS = 'get_posts'\nexport const GET_POST_CLOZES = \"get_post_clozes\"\nexport const INCREMENT_POST_COUNT = \"increment_post_count\"\nexport const DECREMENT_POST_COUNT = \"decrement_post_count\"\nexport const SET_VIEW_NUM = \"set_view_num\"\nexport const REMOVE_GUESSED_CLOZE = \"remove_guessed_cloze\"\nexport const WORD_SEARCH = \"word_search\"\nexport const NEW_SEARCH_TERM = \"new_search_term\"\nexport const GET_USER_CLOZES = \"get_users_clozes\"\nexport const GET_WORDS = \"get_words\"\nexport const GET_USER = \"get_user\"\n\nexport function getUser() {\n    const user = axios.get(`/backend/userinfo`, {withCredentials: true})\n\n    return {\n        type: GET_USER,\n        payload: user\n    }\n}\n\nexport function addRoomToUser(room) {\n    const roomToSend = {room:room}\n    const user = axios.post(`/backend/userinfo`, roomToSend, {withCredentials: true})\n\n    return {\n        type: GET_USER,\n        payload: user\n    }\n}\n\nexport function getPosts(viewNum, startPost) {\n    const posts = axios.get(`/backend/posts?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_POSTS,\n        payload: posts\n    }\n}\n\nexport async function getPostClozes(viewNum, startPost) {\n    const clozes = await axios.get(`/backend/posts/clozes?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_POST_CLOZES,\n        payload: clozes\n    }\n}\n\nexport function getUserClozes(viewNum, startPost, view) {\n    const userClozes = axios.get(`/backend/user/clozes?viewNum=${viewNum}&startPost=${startPost}&view=${view}`, {withCredentials: true})\n\n    return {\n        type: GET_USER_CLOZES,\n        payload: userClozes\n    }\n}\n\nexport async function getWords(viewNum, startPost, view) {\n    const words = await axios.get(`/backend/user/words?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_WORDS,\n        payload: words\n    }\n}\n\nexport function incrementPostNumber(amount) {\n    return {\n        type: INCREMENT_POST_COUNT,\n        payload: amount\n    }\n}\n\nexport function decrementPostNumber(amount) {\n    return {\n        type: DECREMENT_POST_COUNT,\n        payload: amount\n    }\n}\n\nexport function markClozeCorrect(mark, cloze, clozes) {\n    let markedCloze = cloze\n    markedCloze.lastAttempt = mark\n    markedCloze.lastAttemptDate = new Date()\n\n    const postMarkedCloze = axios.post(`/backend/posts/clozes`, markedCloze, {withCredentials: true})\n\n    let clozesMinusMarked = clozes.filter(c => {\n        return c.postContent != cloze.postContent\n    })\n\n    return {\n        type: REMOVE_GUESSED_CLOZE,\n        payload: clozesMinusMarked\n    }\n}\n\nexport function addClozeToUser(cloze) {\n    let markedCloze = cloze\n    markedCloze.lastAttempt = \"incorrect\"\n    markedCloze.lastAttemptDate = new Date()\n    markedCloze.postClozedTokenizedContent = cloze.postTokenizedContent\n    markedCloze.multipleChoiceWords = []\n    markedCloze.removedWord = \"\"\n\n    const postMarkedCloze = axios.post(`/backend/posts/clozes`, markedCloze, {withCredentials: true})\n\n    return postMarkedCloze \n}\n\nexport function wordSearch(word, language) {\n    console.log(word)\n    const searchResult = axios.get(`/backend/wordsearch?query=${word}&lang=${language}`, {withCredentials: true})\n\n    return {\n        type: WORD_SEARCH,\n        payload: searchResult\n    }\n\n}\n\nexport function addWordToUserDict(word) {\n    const addWord = axios.put(axios.post(`/backend/addWordToDict`, word, {withCredentials: true}))\n\n    return addWord\n}\n\nexport function newSearchTerm(searchTerm) {\n    return {\n        type: NEW_SEARCH_TERM,\n        payload: searchTerm\n    }\n}","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal'\nimport './dictionaryEntry.css'\nimport * as actions from \"../actions/index.js\"\n\nclass DictionaryEntry extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            searchLanguage: \"Chinese\"\n        }\n\n        this.wordOnClick = this.wordOnClick.bind(this)\n        this.intitialSearch = this.initialSearch.bind(this)\n    }\n\n    componentDidMount() {\n        this.intitialSearch()\n    }\n\n    initialSearch() {\n        if (!this.props.searchTerm) {\n            setTimeout(() => {this.intitialSearch()}, 10000)\n        } else {\n            this.props.wordSearch(this.props.searchTerm, this.state.searchLanguage)\n        }\n    }\n\n    onEntryClick(word) {\n        this.props.addWordToUserDict(word)\n        alert(`${word.simplified} added to your dictionary!`)\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm, this.state.searchLanguage)\n    }\n\n    render() {\n        if (this.props.word.length == 0 ) {\n            return (\n                <div>\n                    <Row className=\"dictionary-top\">\n                        <h4 className=\"dictionary-title\">Search the Dictionary:</h4>\n                        <span>\n                            <form className=\"input-group search-bar\">\n                                <input\n                                    className=\"search-term\"\n                                    value={this.props.searchTerm}\n                                    onChange={(event) => {this.wordOnClick(event.target.value)}}\n                                />\n                                <select className=\"language-dropdown\" onChange={event => {this.setState({ searchLanguage: event.target.value })}}>\n                                    <option value=\"Chinese\">Chinese</option>\n                                    <option value=\"English\">English</option>\n                                </select>\n                            </form>\n                        </span>\n                    </Row>\n                    <div>searching the dictionary...</div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Row className=\"dictionary-top\">\n                        <h4 className=\"dictionary-title\">Search the Dictionary:</h4>\n                        <span>\n                            <form className=\"input-group search-bar\">\n                                <input\n                                    value={this.props.searchTerm}\n                                    onChange={(event) => {console.log(event.target.value);this.wordOnClick(event.target.value)}}\n                                />\n                                <select className=\"category-dropdown\" onChange={event => {this.setState({ searchLanguage: event.target.value })}}>\n                                    <option value=\"Chinese\">Chinese</option>\n                                    <option value=\"English\">English</option>\n                                </select>\n                            </form>\n                        </span>\n                    </Row>\n                    {\n                    this.props.word.map((entry, index) => {\n                        let entryNum = index + 1\n                        return (\n                            <div className=\"entry\">\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"simplified-traditional\">\n                                            <span className= \"entry-num\">{entryNum}.</span>\n                                            <span className=\"simplified-char\">Character: {entry.simplified}</span>\n                                            {/* <span className=\"traditional-char\">({entry.traditional})</span> */}\n                                            <span class=\"material-icons add-word\" onClick={() => {this.onEntryClick(entry)}}>add_circle_outline</span>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"pinyin\">\n                                        Pronunciation: {entry.pinyin}\n                                        </div>\n                                        <div className=\"entry-POS\">\n                                            Part of Speech: {entry.partOfSpeech}\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"english-definition\">\n                                            Definition: {entry.english}\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n            )\n        }\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        word: state.searchResult,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(DictionaryEntry)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport './header.css'\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\n\nclass Header extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false\n        }\n    }\n\n    async componentDidMount() {\n        // await this.props.getUser()\n    }\n\n    userNotSignedIn() {\n        alert(\"Click a level to begin!\")\n    }\n\n    renderUserIcon() {\n        if (Object.keys(this.props.user).length > 0) {\n            return (\n                <Link to={\"/user\"}><span className=\"user-icon\"><i class=\"fas fa-user fa-1x\"></i></span></Link>\n            )\n        } else {\n            return (\n                <span className=\"user-icon\" onClick={event => {this.userNotSignedIn()}}><i class=\"fas fa-user fa-1x\"></i></span>\n            )\n        }\n    }\n\n    renderSearchIcon() {\n        if (Object.keys(this.props.user).length > 0) {\n            return (\n                <span className=\"search-icon\"><i class=\"fas fa-search fa-1x\" onClick={() => {this.setState({show:true})}}></i></span>\n            )\n        } else {\n            return (\n                <span className=\"search-icon\" onClick={event => {this.userNotSignedIn()}}><i class=\"fas fa-search fa-1x\"></i></span>\n            )\n        }\n    }\n\n    render() {\n        this.props.getUser()\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                <div className=\"header\">\n                    <Link to={\"/user\"}><span className=\"user-icon\"><i class=\"fas fa-user fa-1x\"></i></span></Link>\n                    <Link to={\"/posts\"}><span className=\"header-text\">Cloze Weibo</span></Link>\n                    <span className=\"search-icon\"><i class=\"fas fa-search fa-1x\" onClick={() => {this.setState({show:true})}}></i></span>                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, actions)(Header)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col, ModalBody } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport Modal from 'react-bootstrap/Modal'\nimport './postCards.css'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass PostCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false\n        }\n\n        this.wordOnClick = this.wordOnClick.bind(this)\n    }\n\n    renderPostWords(postContent) {\n        return (\n            postContent.map(word => {\n                return <span onClick={() => {this.wordOnClick(word[0])}}>{ word[0] }</span>\n            })\n        )\n    }\n\n    addClozeButton(post) {\n        this.props.addClozeToUser(post)\n        alert(\"Post added for study!\")\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        // this.props.wordSearch(this.props.searchTerm)\n        this.setState({show: true})\n    }\n\n    renderContentImage(post) {\n        if (post.postImageUrl.length == 0) {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col sm={1}></Col>\n                    <Col sm={10}><div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div></Col>\n                    <Col sm={1}></Col>\n                </Row>\n            )\n        } else {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col xs={8}><div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div></Col>\n                    <Col xs={4}><img className=\"zhihuImage\" src={post.postImageUrl} onError={(e)=>{e.target.onerror = null; e.target.src=\"http://pic.51yuansu.com/pic/cover/00/05/24/5736985738490_610.jpg\"}} /></Col>\n                </Row>\n            )\n        }\n    }\n\n    renderPosts(post) {\n        if (post.postSource == \"weibo\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col xs={7}>\n                                            <div className=\"user\">\n                                                <a href={`https://www.weibo.com/${post.postUserUrl}`} target='_blank'>\n                                                        <Image className=\"userImage\" roundedCircle fluid src={post.postUserImageUrl} />\n                                                        <span>{post.postUser}</span>\n                                                </a>\n                                            </div>\n                                        </Col>\n                                        <Col xs={3} className=\"post-level-col\"><div className=\"post-level\">Lvl {post.postLevel}</div></Col>\n                                        <Col xs={2} className=\"source-icon\">\n                                            {/* <span className=\"source\"></span> */}\n                                            <i class=\"fab fa-weibo fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    <div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div>\n                                    <Row className=\"cardBotom\">     \n                                            <Col xs={6}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                            <Col xs={6}><span class=\"material-icons addCloze\" onClick={() => {this.addClozeButton(post)}}>add_circle_outline</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource == \"zhihu_recommended\" || post.postSource == \"zhihu_hot\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col xs={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                Zhihu Question:\n                                            </a>   \n                                         </Col>\n                                        <Col xs={3}><div className=\"post-level\">Lvl {post.postLevel}</div></Col>\n                                        <Col xs={2} className=\"source-icon\">\n                                            {/* <span className=\"source\">Source</span> */}\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"cardBotom\">                                    \n                                        <Col xs={6}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                        <Col xs={6}><span class=\"material-icons addCloze\" onClick={() => {this.addClozeButton(post)}}>add_circle_outline</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource.slice(0,6) == \"wangyi\" || post.postSource.slice(0,7) == \"toutiao\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col xs={3}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                News Article:\n                                            </a>   \n                                         </Col>\n                                        <Col xs={3}><div className=\"post-level\">Lvl {post.postLevel}</div></Col>\n                                        <Col xs={2} className=\"source-icon\">\n                                            {/* <span className=\"source\">Source</span> */}\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                        <div className=\"postContent\">\n                                            { this.renderContentImage(post)}\n                                        </div>\n                                    <Row className=\"cardBotom\">                                    \n                                        <Col xs={6}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                        <Col xs={6}><span class=\"material-icons addCloze\" onClick={() => {this.addClozeButton(post)}}>add_circle_outline</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                {this.props.posts.map(post => (this.renderPosts(post)))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostCards)\n\n    ","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Card, Row, Col, Image } from 'react-bootstrap'\nimport './intro.css'\n\n\n\nclass IntroPosts extends Component {\n    render() {\n        return (\n            <div className=\"intro\">\n                <Row>\n                    <Col xs={2}></Col>\n                    <Col xs={8}>\n                        <h3 className=\"intro-header\">Welcome to Posts!</h3>\n                        <p className=\"intro-paragraph\">On this page you can see read of the recent posts tailored to your reading level!</p>\n                        <p className=\"intro-paragraph\">Use these buttons to toggle between reading posts and playing a fill-in-the-blank:</p>\n                        <br/>\n                        <Image className=\"sample-post\" src=\"https://raw.githubusercontent.com/paulwstorm/Paul-Storm-Final-Project/images/server/images/Screen%20Shot%202020-04-06%20at%207.45.45%20PM.png\"></Image>\n                        <br/>\n                        <p className=\"intro-paragraph\">\n                            Click on any character in the post to see the definition\n                        </p>\n                        <br/>\n                        <p className=\"intro-paragraph\">\n                            Clicking the \"+\" on any post or dictionary entry allows you to save\n                            the word or post for later study.\n                        </p>\n                        <Image className=\"add-word-pic\" src=\"https://raw.githubusercontent.com/paulwstorm/Paul-Storm-Final-Project/images/server/images/Screen%20Shot%202020-04-06%20at%208.02.30%20PM.png\"></Image>\n                        <br/>\n                        <br/>\n                    </Col>\n                    <Col xs={2}></Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default IntroPosts","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './posts.css'\nimport Header from \"./header.js\"\nimport PostCards from \"./postCards.js\"\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport IntroPosts from \"./intros/posts.js\"\n\n\nclass Posts extends Component{\n    constructor() {\n        super()\n\n        this.state = {\n            viewNum: 10,\n            startPost: 0,\n            showIntroModal: false\n        }\n    }\n\n    async componentDidMount() {\n        this.props.getPosts(this.props.viewNum, this.props.startPost)\n        await this.props.getUser()\n    }\n\n    async checkNewUser() {\n        if (Object.keys(this.props.user).length > 0) {\n            if ((!this.props.user.visited.includes(\"/posts\")) && (this.state.showIntroModal == false)) {\n                this.setState({showIntroModal: true})\n                await this.props.addRoomToUser(\"/posts\")\n            }\n        }\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-less-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-more-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-more-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-less-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        this.checkNewUser()\n        if (this.props.posts.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Posts!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Modal\n                        className=\"intro-modal\"\n                        size={\"s\"} \n                        show={this.state.showIntroModal} \n                        onHide={() => {this.setState({showIntroModal:false})}}>\n                            <Modal.Body class=\"intro-body\">\n                                <IntroPosts></IntroPosts>\n                            </Modal.Body>\n                        </Modal>\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"posts-read-posts\" href=\"/posts/\">Read</Button>\n                                    <Button className=\"posts-cloze-posts\" href=\"/posts/clozes\">Challenge</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts,\n        viewNum: state.viewNum,\n        startPost: state.startPost,\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, actions)(Posts)","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport './selectLevel.css'\nimport Header from \"./header.js\"\n\nclass SelectLevel extends Component{\n  render() {\n    return (\n      <div>\n       <Header />        \n        <Row>\n          <Col sm={3}></Col>\n          <Col sm={6}>\n            <p className=\"selectLevelTitle\">Welcome</p>\n            <p className=\"selectLevelTitle\">欢迎光临!</p>\n            <div className=\"intro-paragraph\">\n              <span>To begin reading posts, please select the level that corresponds to your </span>\n              <a className=\"HSK-link\" href=\"https://en.wikipedia.org/wiki/Hanyu_Shuiping_Kaoshi\" target=\"_blank\">HSK</a>\n              <span> level and we'll provide content appropriate for you!</span>\n            </div> \n          </Col>\n          <Col sm={3}></Col>\n        </Row>\n        <Row className=\"select-level-row\">\n          <Col sm={4}></Col>\n          <Col sm={4}>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"1\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 1</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"2\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 2</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"3\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 3</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"4\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 4</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"5\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 5</Button>\n            </form>\n            <form action=\"/backend/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"6\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 6</Button>\n            </form>\n          </Col>\n          <Col sm={4}></Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default SelectLevel;","import React from 'react';\nimport { Component } from 'react'\nimport './login.css'\n\nclass Login extends Component{\n  render() {\n    return (\n      <div>\n       <h3>Logged In</h3>\n       <a href=\"http://localhost:5005/test\">click here!</a>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col } from 'react-bootstrap'\nimport './postClozeCards.css'\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\n\nclass PostClozeCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            showDict: false,\n            showIncorrect: false,\n            showCorrect: false,\n            guessedCloze: {},\n            searchTerm: \"\"\n        }\n\n        this.wordOnClick = this.wordOnClick.bind(this)\n    }\n\n    async checkCorrect(guessed, answer, cloze) {\n        if (guessed == answer) {\n            let mark=\"correct\"\n            this.props.markClozeCorrect(mark, cloze, this.props.clozes)\n            this.setState({showCorrect: true})\n            setTimeout(() => {this.setState({showCorrect: false})}, 1000)\n        } else {\n            let mark=\"incorrect\"\n            this.props.markClozeCorrect(mark, cloze, this.props.clozes)\n            await this.setState({guessedCloze: cloze}, this.setState({showIncorrect: true}))\n        }\n    }\n\n    renderPostWords(postContent) {\n        return (\n            postContent.map(word => {\n                return <span onClick={() => {this.setState({showDict: true}); this.wordOnClick(word[0])}}>{ word[0] }</span>\n            })\n        )\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm)\n    }\n\n    renderContentImage(post) {\n        if (post.postImageUrl.length == 0) {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col sm={1}></Col>\n                    <Col sm={10}><div>{ this.renderPostWords(post.postClozedTokenizedContent) }</div></Col>\n                    <Col sm={1}></Col>\n                </Row>\n            )\n        } else {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col xs={8}><div>{ this.renderPostWords(post.postClozedTokenizedContent) }</div></Col>\n                    <Col xs={4}><img className=\"zhihuImage\" src={post.postImageUrl} onError={(e)=>{e.target.onerror = null; e.target.src=\"http://pic.51yuansu.com/pic/cover/00/05/24/5736985738490_610.jpg\"}} /></Col>\n                </Row>\n            )\n        }\n    }\n\n    showGuessedCloze() {\n        console.log(\"this.state\", this.state)\n        return (\n            <div className=\"show-incorrect\">\n                <div>The correct answer is</div>\n                <div>{this.state.guessedCloze.removedWord}</div>\n                <br/>\n                <div>Full post: </div>\n                <div>{this.state.guessedCloze.postContent}</div>\n            </div>\n        )\n    }\n\n    showCorrect() {\n        return (\n            <div>\n                <i class=\"fas fa-check fa10x\"></i>\n                <div>Correct!</div>\n            </div>\n        )\n    }\n\n    renderPosts(post) {\n        if (post.postSource == \"weibo\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col xs={7}>\n                                            <div className=\"user\">\n                                                <a href={`https://www.weibo.com/${post.postUserUrl}`} target='_blank'>\n                                                        <Image className=\"userImage\" roundedCircle fluid src={post.postUserImageUrl} />\n                                                        <span>{post.postUser}</span>\n                                                </a>\n                                            </div>\n                                        </Col>\n                                        <Col xs={3}><div className=\"post-level\">Lvl {post.postLevel}</div></Col>\n                                        <Col xs={2} className=\"source-icon\">\n                                            {/* <span className=\"source\">Source</span> */}\n                                            <i class=\"fab fa-weibo fa-1x\"></i>\n                                        </Col>\n                                    </Row>                                 \n                                    <div className=\"postContent\">{ this.renderPostWords(post.postClozedTokenizedContent) }</div>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource == \"zhihu_recommended\" || post.postSource == \"zhihu_hot\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col xs={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                Zhihu Question:\n                                            </a>   \n                                         </Col>\n                                        <Col xs={3}><div className=\"post-level\">Lvl {post.postLevel}</div></Col>\n                                        <Col xs={2} className=\"source-icon\">\n                                            {/* <span className=\"source\">Source</span> */}\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource.slice(0,6) == \"wangyi\" || post.postSource.slice(0,7) == \"toutiao\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col xs={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                News Article:\n                                            </a>   \n                                         </Col>\n                                        <Col xs={3}><div className=\"post-level\">Lvl {post.postLevel}</div></Col>\n                                        <Col xs={2} className=\"source-icon\">\n                                            {/* <span className=\"source\">Source</span> */}\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.showDict} \n                onHide={() => {this.setState({showDict:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                <Modal\n                className=\"cloze-modal\"\n                id=\"cloze-modal\"\n                size={\"s\"} \n                show={this.state.showIncorrect} \n                onHide={() => {this.setState({showIncorrect:false})}}>\n                    <Modal.Body class=\"show-incorrect-body\">\n                        {this.showGuessedCloze()}\n                    </Modal.Body>\n                </Modal>\n                <Modal\n                className=\"correct-modal\"\n                id=\"correct-modal\"\n                size={\"s\"} \n                show={this.state.showCorrect} \n                onHide={() => {this.setState({showCorrect:false})}}>\n                    <Modal.Body class=\"show-incorrect-body\">\n                        {this.showCorrect()}\n                    </Modal.Body>\n                </Modal>\n                {this.props.clozes.map(post => (this.renderPosts(post)))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostClozeCards)\n\n    ","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Card, Row, Col, Image } from 'react-bootstrap'\nimport './intro.css'\n\nclass IntroClozes extends Component {\n    render() {\n        return (\n            <div>\n                <h3 className=\"intro-header\">Welcome to the Challenge!</h3>\n                <p className=\"intro-paragraph\">\n                    Here you can see the same posts you were just reading\n                    but here you are challenged to fill-in-the-blank with\n                    the word that has been removed from the post\n                </p>\n                <p className=\"intro-paragraph\">The [------] represents the space the word has been taken from</p>\n                <br/>\n                <p className=\"intro-paragraph\">\n                    Click on of the four boxes at the bottom to fill in the blank!\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default IntroClozes","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './postClozes.css'\nimport Header from \"./header.js\"\nimport PostClozeCards from \"./postClozeCards.js\"\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport IntroClozes from \"./intros/clozes.js\"\n\nclass PostClozes extends Component{\n    constructor() {\n        super()\n\n        this.state = {\n            showIntroModal: false\n        }\n    }\n\n    async componentDidMount() {\n        this.props.getPostClozes(this.props.viewNum, this.props.startPost)\n        await this.props.getUser()\n    }\n\n    async checkNewUser() {\n        if (Object.keys(this.props.user).length > 0) {\n            if ((!this.props.user.visited.includes(\"/posts/clozes\")) && (this.state.showIntroModal == false)) {\n                this.setState({showIntroModal: true})\n                await this.props.addRoomToUser(\"/posts/clozes\")\n            }\n        }\n\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                <Col xs={2}></Col>\n                    <Col xs={8}>\n                        <Button className=\"lposts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                    </Col>\n                <Col xs={2}></Col>\n            </Row>  \n            )\n        }\n    }\n\n    render() {\n        this.checkNewUser()\n        if (this.props.clozes.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Clozes!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Modal\n                        className=\"intro-modal\"\n                        size={\"s\"} \n                        show={this.state.showIntroModal} \n                        onHide={() => {this.setState({showIntroModal:false})}}>\n                            <Modal.Body class=\"dictionary-body\">\n                                <IntroClozes></IntroClozes>\n                            </Modal.Body>\n                        </Modal>\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"posts-clozes-read-posts\" href=\"/posts/\">Read</Button>\n                                    <Button className=\"posts-clozes-cloze-posts\" href=\"/posts/clozes\">Challenge</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostClozeCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        viewNum: state.viewNum,\n        startPost: state.startPost,\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostClozes)","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Card, Row, Col, Image } from 'react-bootstrap'\nimport './intro.css'\n\nclass IntroClozes extends Component {\n    render() {\n        return (\n            <div>\n                <h3 className=\"intro-header\">Welcome to You User Page!</h3>\n                <p className=\"intro-paragraph\">\n                    Here you can see all the words you saved from the dictionary\n                    as well as all of the post you have saved or attempted to fill in the blank.\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default IntroClozes","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport './userPage.css'\nimport Header from \"./header.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport IntroUser from \"./intros/user.js\"\nimport { connect } from \"react-redux\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserPage extends Component{\n    constructor() {\n        super()\n\n        this.state = {\n            showIntroModal: false\n        }\n    }\n\n    async componentDidMount() {\n        await this.props.getUser()\n    }\n\n    async checkNewUser() {\n        if (Object.keys(this.props.user).length > 0) {\n            if ((!this.props.user.visited.includes(\"/user\")) && (this.state.showIntroModal == false)) {\n                this.setState({showIntroModal: true})\n                await this.props.addRoomToUser(\"/user\")\n            }\n        }\n    }\n\n    render() {\n        this.checkNewUser()\n        return (\n            <div>\n                <Header />\n                <Modal\n                    className=\"intro-modal\"\n                    size={\"s\"} \n                    show={this.state.showIntroModal} \n                    onHide={() => {this.setState({showIntroModal:false})}}>\n                    <Modal.Body class=\"intro-body\">\n                        <IntroUser></IntroUser>\n                    </Modal.Body>\n                </Modal>\n                <Row>\n                    <Col xs={4}></Col>\n                    <Col className={\"user-page-buttons\"} xs={4}>\n                        <div><Button className={\"my-clozes\"} href=\"/user/clozes\"> My Clozes</Button></div>\n                        <div><Button className={\"my-words\"} href=\"/user/words\">My Words</Button></div>\n                    </Col>\n                    <Col xs={4}></Col>\n                </Row>\n            </div>\n        )\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserPage)","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Card, Row, Col, Image } from 'react-bootstrap'\nimport './intro.css'\n\nclass IntroUserClozes extends Component {\n    render() {\n        return (\n            <div>\n                <h3 className=\"intro-header\">These are your saved posts!</h3>\n                <p className=\"intro-paragraph\">\n                    Here you can see all of the posts that you have saved.\n                    As well as all of the posts have you filled-in-the-blank with.\n                    By default you will only see the posts you recently saved and \n                    those posts you answered incorrectly last time. Select \"All\" to\n                    see all of the posts you saved.\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default IntroUserClozes","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userClozes.css'\nimport Header from \"./header.js\"\nimport PostClozeCards from \"./postClozeCards.js\"\nimport * as actions from \"../actions/index.js\"\nimport IntroUserClozes from \"./intros/userClozes.js\"\nimport Modal from 'react-bootstrap/Modal'\n\nclass UserClozes extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false,\n            view: \"incorrect\",\n            incorrectButton: \"button-on\",\n            allButton: \"button-off\",\n            showIntroModal: false\n        }\n    }\n\n    async componentDidMount() {\n        this.props.getUserClozes(this.props.viewNum, this.props.startPost, this.state.view)\n        await this.props.getUser()\n\n    }\n\n    async handleToggleClick(view) {\n        await this.setState({view: view})\n        this.props.getUserClozes(this.props.viewNum, this.props.startPost, this.state.view)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getUserClozes(this.props.viewNum, (this.props.startPost + 10), this.state.view); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                <Col xs={2}></Col>\n                    <Col xs={8}>\n                        <Button className=\"lposts-clozes-less-posts\" onClick={event => { this.props.getUserClozes(this.props.viewNum, (this.props.startPost - 10), this.state.view); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                    </Col>\n                <Col xs={2}></Col>\n            </Row>  \n            )\n        }\n    }\n\n    async checkNewUser() {\n        if (Object.keys(this.props.user).length > 0) {\n            if ((!this.props.user.visited.includes(\"/user/clozes\")) && (this.state.showIntroModal == false)) {\n                this.setState({showIntroModal: true})\n                await this.props.addRoomToUser(\"/user/clozes\")\n            }\n        }\n    }\n\n    render() {\n        this.checkNewUser()\n        if (Object.keys(this.props.user).length == 0) {\n            return (\n                <div>\n                <Header />\n                <Modal\n                    className=\"intro-modal\"\n                    size={\"s\"} \n                    show={this.state.showIntroModal} \n                    onHide={() => {this.setState({showIntroModal:false})}}>\n                    <Modal.Body class=\"intro-body\">\n                        <IntroUserClozes></IntroUserClozes>\n                    </Modal.Body>\n                </Modal>\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className={this.state.incorrectButton} onClick={() => {this.handleToggleClick(\"incorrect\"); this.setState({allButton: \"button-off\"}); this.setState({incorrectButton: \"button-on\"})}}>Incorrect</Button>\n                            <Button className={this.state.allButton} onClick={() => {this.handleToggleClick(\"all\"); this.setState({incorrectButton: \"button-off\"}); this.setState({allButton: \"button-on\"})}}>All</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n                <Row>\n                    <Col xs={4}></Col>\n                    <Col xs={4}>\n                        <h2 className=\"loading\">Loading your saved posts!</h2>\n                    </Col>\n                    <Col xs={4}></Col>\n                </Row>\n            </div>\n            )\n        } else if (this.props.clozes.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Modal\n                        className=\"intro-modal\"\n                        size={\"s\"} \n                        show={this.state.showIntroModal} \n                        onHide={() => {this.setState({showIntroModal:false})}}>\n                        <Modal.Body class=\"intro-body\">\n                            <IntroUserClozes></IntroUserClozes>\n                        </Modal.Body>\n                    </Modal>\n                    <Row>\n                        <Col xs={2}></Col>\n                            <Col xs={8}>\n                                <Button className={this.state.incorrectButton} onClick={() => {this.handleToggleClick(\"incorrect\"); this.setState({allButton: \"button-off\"}); this.setState({incorrectButton: \"button-on\"})}}>Incorrect</Button>\n                                <Button className={this.state.allButton} onClick={() => {this.handleToggleClick(\"all\"); this.setState({incorrectButton: \"button-off\"}); this.setState({allButton: \"button-on\"})}}>All</Button>\n                            </Col>\n                        <Col xs={2}></Col>\n                    </Row>  \n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">You don't have any saved posts!</h2>\n                            <p>Click on the \"+\" button on any posts to save it</p>\n                            <p>or play the fill-in-blank challenge and any posts you guess with be saved to your posts.</p>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Modal\n                            className=\"intro-modal\"\n                            size={\"s\"} \n                            show={this.state.showIntroModal} \n                            onHide={() => {this.setState({showIntroModal:false})}}>\n                            <Modal.Body class=\"intro-body\">\n                                <IntroUserClozes></IntroUserClozes>\n                            </Modal.Body>\n                        </Modal>\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className={this.state.incorrectButton} onClick={() => {this.handleToggleClick(\"incorrect\"); this.setState({allButton: \"button-off\"}); this.setState({incorrectButton: \"button-on\"})}}>Incorrect</Button>\n                                    <Button className={this.state.allButton} onClick={() => {this.handleToggleClick(\"all\"); this.setState({incorrectButton: \"button-off\"}); this.setState({allButton: \"button-on\"})}}>All</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostClozeCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        viewNum: state.viewNum,\n        startPost: state.startPost,\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserClozes)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col, ModalBody } from 'react-bootstrap'\nimport './wordCards.css'\n\nclass WordCards extends Component{\n\n    renderWord(word) {\n        return (\n            <div className=\"word-card\">\n                <Row>\n                    <Col s={12}>\n                        <div className=\"simplified-traditional\">\n                            <span className=\"word-simplified-char\">Character: {word.simplified}</span>\n                            <span className=\"traditional-char\">  ({word.traditional})</span>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col s={12}>\n                        <div className=\"word-pinyin\">\n                        Pronunciation: {word.pinyin}\n                        </div>\n                        <div className=\"word-POS\">\n                            Part of Speech: {word.partOfSpeech}\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col s={12}>\n                        <div className=\"word-english-definition\">\n                            Definition: {word.english}\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.words.map(word => this.renderWord(word))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words    \n    }\n}\n\n\nexport default connect(mapStateToProps)(WordCards)\n\n    ","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Card, Row, Col, Image } from 'react-bootstrap'\nimport './intro.css'\n\nclass IntroUserWords extends Component {\n    render() {\n        return (\n            <div>\n                <h3 className=\"intro-header\">Welcome to Your Dictionary!</h3>\n                <p className=\"intro-paragraph\">\n                    If you don't see any words here go back\n                    to the posts page and click on any word in the post.\n                    Once the defintion pops up click the plus symbol.\n                </p>\n                <br/>\n                <p className=\"intro-paragraph\">\n                    Here you can see all the words you saved into your dictionary.\n                    Use these buttons to toggle between reading the word defintions\n                    and challening your vocabulary retention!\n                </p>\n                <Image className=\"sample-post\" src=\"https://raw.githubusercontent.com/paulwstorm/Paul-Storm-Final-Project/images/server/images/Screen%20Shot%202020-04-06%20at%209.01.09%20PM.png\" ></Image>\n                <p className=\"intro-paragraph\">\n                    When in study mode, click the word to \"flip\" the flash card over\n                    and see the whole word.\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default IntroUserWords","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userWords.css'\nimport Header from \"./header.js\"\nimport WordCards from \"./wordCards.js\"\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport IntroUserWords from \"./intros/userWords.js\"\n\n\nclass UserWords extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            showIntroModal: false\n        }\n    }\n\n\n    async componentDidMount() {\n        this.props.getWords(this.props.viewNum, this.props.startPost)\n        await this.props.getUser()\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    async checkNewUser() {\n        if (Object.keys(this.props.user).length > 0) {\n            if ((!this.props.user.visited.includes(\"/user/words\")) && (this.state.showIntroModal == false)) {\n                this.setState({showIntroModal: true})\n                await this.props.addRoomToUser(\"/user/words\")\n            }\n        }\n    }\n\n    render() {\n        this.checkNewUser()\n        if (Object.keys(this.props.user).length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Modal\n                            className=\"intro-modal\"\n                            size={\"s\"} \n                            show={this.state.showIntroModal} \n                            onHide={() => {this.setState({showIntroModal:false})}}>\n                            <Modal.Body class=\"intro-body\">\n                                <IntroUserWords></IntroUserWords>\n                            </Modal.Body>\n                        </Modal>\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Words!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else if (this.props.words.length == 0) {\n                return (\n                    <div>\n                    <Header />\n                    <Modal\n                            className=\"intro-modal\"\n                            size={\"s\"} \n                            show={this.state.showIntroModal} \n                            onHide={() => {this.setState({showIntroModal:false})}}>\n                            <Modal.Body class=\"intro-body\">\n                                <IntroUserWords></IntroUserWords>\n                            </Modal.Body>\n                        </Modal>\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Your dictionary is empty!</h2>\n                            <p>\n                                Click on the search bar to search the dictionary\n                                or click on any post to add words from that post.\n                            </p>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                 </div>\n                )\n            } else {\n                return (\n                    <div>\n                        <Header />\n                        <Modal\n                            className=\"intro-modal\"\n                            size={\"s\"} \n                            show={this.state.showIntroModal} \n                            onHide={() => {this.setState({showIntroModal:false})}}>\n                            <Modal.Body class=\"intro-body\">\n                                <IntroUserWords></IntroUserWords>\n                            </Modal.Body>\n                        </Modal>\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"words-read-words\" href=\"/user/words\">Read</Button>\n                                    <Button className=\"words-study-words\" href=\"/user/words/study\">Study</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <WordCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words,\n        viewNum: state.viewNum,\n        startPost: state.startPost,\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserWords)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Card, Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal'\nimport './wordCardsStudy.css'\n\nclass WordCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            wordBack: {},\n            show: false\n        }\n    }\n\n    renderWord(word) {\n        return (\n            <Row>\n                <Col s={10}>\n                    <div>\n                        <Row>\n                            <Col md={2}></Col>\n                            <Col md={8}>\n                                <Card className=\"word-study-card\" onClick={event => {this.setState({ wordBack: word}); this.setState({show: true})}}>\n                                    <div class=\"card-body\">\n                                        {word.simplified}\n                                    </div>\n                                </Card>\n                            </Col>\n                            <Col md={2}></Col>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>    \n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"word-modal\"\n                id=\"word-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"word-body\">\n                        <div className=\"word-back-card\">\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"simplified-traditional\">\n                                        <span className=\"word-simplified-char\">Character: {this.state.wordBack.simplified}</span>\n                                        <span className=\"traditional-char\">  ({this.state.wordBack.traditional})</span>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"word-pinyin\">\n                                    Pronunciation: {this.state.wordBack.pinyin}\n                                    </div>\n                                    <div className=\"word-POS\">\n                                        Part of Speech: {this.state.wordBack.partOfSpeech}\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"word-english-definition\">\n                                        Definition: {this.state.wordBack.english}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                {this.props.words.map(word => this.renderWord(word))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words    \n    }\n}\n\n\nexport default connect(mapStateToProps)(WordCards)\n\n    ","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userWordsStudy.css'\nimport Header from \"./header.js\"\nimport WordCardsStudy from \"./wordCardsStudy.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserWordsStudy extends Component {\n    componentDidMount() {\n        this.props.getWords(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.words.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Words!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"study-read-words\" href=\"/user/words\">Read</Button>\n                                    <Button className=\"study-study-words\" href=\"/user/words/study\">Study</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <WordCardsStudy />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserWordsStudy)","import { GET_POSTS } from \"../actions/index.js\"\nimport { array } from \"prop-types\";\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n  }\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_POSTS:\n            console.log(\"in postsReducer: \", action)\n            state = []\n            state = action.payload.data\n            state = shuffle(state)\n            return state\n        default:\n            console.log(\"in postsReducer: \", action)\n            return state\n    }\n}","import { GET_POST_CLOZES, REMOVE_GUESSED_CLOZE, GET_USER_CLOZES } from \"../actions/index.js\"\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n  }\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_POST_CLOZES:\n            let newState = []\n            newState = action.payload.data\n            console.log(newState.clozedPosts[9])\n            if (newState.clozedPosts == undefined) {\n                newState = []\n                return newState\n            } else {\n                for (var i = 0; i < newState.posts.length; i ++) {\n                    newState.posts[i].postClozedTokenizedContent = newState.clozedPosts[i][0]\n                    let multipleChoiceWords = newState.clozedPosts[i][2]\n                    multipleChoiceWords.push(newState.clozedPosts[i][1][0])\n                    let removedWord = newState.clozedPosts[i][1]\n                    newState.posts[i].removedWord = removedWord[0]\n                    multipleChoiceWords = shuffle(multipleChoiceWords)\n                    newState.posts[i].multipleChoiceWords = multipleChoiceWords\n                }\n                return newState.posts\n            }\n        case GET_USER_CLOZES:\n                state = action.payload.data\n                if (state.clozedPosts == undefined) {\n                    state = []\n                    return state\n                } else {\n                    for (var i = 0; i < state.posts.length; i ++) {\n                        state.posts[i].postClozedTokenizedContent = state.clozedPosts[i][0]\n                        let removedWord = state.clozedPosts[i][1]\n                        let multipleChoiceWords = state.clozedPosts[i][2]\n                        multipleChoiceWords.push(state.clozedPosts[i][1][0])\n                        state.posts[i].removedWord = removedWord[0]\n                        multipleChoiceWords = shuffle(multipleChoiceWords)\n                        state.posts[i].multipleChoiceWords = multipleChoiceWords\n                    }\n                    return state.posts\n                }\n        case REMOVE_GUESSED_CLOZE:\n            let stateClozeRemove = []\n            stateClozeRemove = action.payload\n            return stateClozeRemove\n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\"\nimport PostsReducer from \"./postsReducer\"\nimport ViewNumReducer from \"./viewNumReducer\"\nimport PostCountReducer from \"./postCountReducer\"\nimport ClozeReducer from \"./clozeReducer\"\nimport SearchResultReducer from \"./searchResultReducer\"\nimport SearchTermReducer from \"./searchTermReducer\"\nimport WordReducer from \"./wordReducer\"\nimport UserReducer from \"./userReducer\"\n\nconst rootReducer = combineReducers({\n    posts: PostsReducer,\n    clozes: ClozeReducer,\n    startPost: PostCountReducer,\n    viewNum: ViewNumReducer,\n    searchTerm: SearchTermReducer,\n    searchResult: SearchResultReducer,\n    words: WordReducer,\n    user: UserReducer\n})\n\nexport default rootReducer","import { INCREMENT_POST_COUNT, DECREMENT_POST_COUNT } from \"../actions/index.js\"\n\nexport default function(state = 0, action) {\n    switch (action.type) {\n        case INCREMENT_POST_COUNT:\n            let incrementState = state + action.payload\n            return incrementState\n        case  DECREMENT_POST_COUNT:\n            let decrementState = state - action.payload\n            return decrementState\n        default:\n            return state\n    }\n\n}\n\n","import { SET_VIEW_NUM } from \"../actions/index\"\n\nexport default function(state = 10, action) {\n    switch (action.type) {\n        case SET_VIEW_NUM:\n            let newState = action.payload\n        default:\n            return state\n    }\n}","import { NEW_SEARCH_TERM } from \"../actions/index.js\"\n\nexport default function(state = \"\", action) {\n    switch(action.type) {\n        case NEW_SEARCH_TERM:\n            state = action.payload\n            return state\n        default:\n            return state\n    }\n}","import { WORD_SEARCH } from \"../actions/index.js\"\n\nexport default function(state = [], action) {\n    switch(action.type) {\n        case WORD_SEARCH:\n            state = action.payload.data\n            return state\n        default:\n            return state\n    }\n}","import { GET_WORDS } from \"../actions/index.js\"\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_WORDS:\n            state = action.payload.data\n            console.log(action.payload.data)\n            return state\n        default:\n            return state\n    }\n}","import { GET_USER } from \"../actions/index.js\"\n\nexport default function(state = {}, action) {\n    switch (action.type){ \n        case GET_USER:\n            state = action.payload.data\n            console.log(state)\n            return state\n        default:\n            return state\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport promise from \"redux-promise\";\nimport Posts from \"./components/posts.js\"\nimport SelectLevel from \"./components/selectLevel.js\"\nimport Login from \"./components/login.js\"\nimport PostClozes from \"./components/postClozes.js\"\nimport './index.css'\nimport UserPage from \"./components/userPage\"\nimport UserClozes from \"./components/userClozes\"\nimport UserWords from \"./components/userWords\"\nimport UserWordsStudy from \"./components/userWordsStudy\"\n\nimport rootReducer from \"./reducers/index.js\";\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(rootReducer)}>\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={SelectLevel} />\n          <Route exact path=\"/test\" component={Login} />\n          <Route exact path=\"/posts\" component={Posts} />\n          <Route exact path=\"/posts/clozes\" component={PostClozes} />\n          <Route exact path=\"/user\" component={UserPage} />\n          <Route exact path=\"/user/clozes\" component={UserClozes} />\n          <Route exact path=\"/user/words\" component={UserWords} />\n          <Route exact path=\"/user/words/study\" component={UserWordsStudy} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}