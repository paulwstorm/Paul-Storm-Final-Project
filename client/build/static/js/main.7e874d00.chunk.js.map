{"version":3,"sources":["components/selectLevel.js","components/login.js","components/postClozes.js","components/userPage.js","components/userClozes.js","reducers/postsReducer.js","reducers/clozeReducer.js","reducers/index.js","reducers/postCountReducer.js","reducers/viewNumReducer.js","reducers/searchTermReducer.js","reducers/searchResultReducer.js","reducers/wordReducer.js","reducers/userReducer.js","components/postCards.js","components/intros/posts.js","components/posts.js","components/wordCards.js","components/userWords.js","components/wordCardsStudy.js","components/userWordsStudy.js","index.js","components/header.js","actions/index.js","components/dictionaryEntry.js","components/postClozeCards.js"],"names":["SelectLevel","xs","className","href","target","action","method","type","name","value","variant","block","Component","Login","PostClozes","this","props","getPostClozes","viewNum","startPost","onClick","event","decrementPostNumber","window","scrollTo","incrementPostNumber","prps","clozes","length","renderButtons","connect","state","actions","UserPage","UserClozes","show","view","incorrectButton","allButton","getUserClozes","setState","handleToggleClick","shuffle","a","j","x","i","Math","floor","random","rootReducer","combineReducers","posts","GET_POSTS","console","log","payload","data","GET_POST_CLOZES","newState","clozedPosts","undefined","postClozedTokenizedContent","multipleChoiceWords","push","removedWord","GET_USER_CLOZES","REMOVE_GUESSED_CLOZE","INCREMENT_POST_COUNT","incrementState","DECREMENT_POST_COUNT","decrementState","SET_VIEW_NUM","searchTerm","NEW_SEARCH_TERM","searchResult","WORD_SEARCH","words","GET_WORDS","user","GET_USER","PostCards","postContent","map","word","wordOnClick","post","addClozeToUser","alert","newSearchTerm","wordSearch","postImageUrl","Row","Col","sm","renderPostWords","postTokenizedContent","src","onError","e","onerror","postSource","md","Card","class","s","postUserUrl","Image","roundedCircle","fluid","postUserImageUrl","postUser","postLevel","dateRetrieved","slice","addClozeButton","postUrl","renderContentImage","Modal","id","size","onHide","Body","renderPosts","IntroPosts","Posts","showIntroModal","getPosts","getUser","Object","keys","visited","includes","addRoomToUser","Button","checkNewUser","WordCards","simplified","traditional","pinyin","partOfSpeech","english","renderWord","UserWords","getWords","wordBack","UserWordsStudy","proxy","require","module","exports","app","use","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","store","exact","path","component","document","getElementById","Header","to","axios","get","withCredentials","userClozes","amount","markClozeCorrect","mark","cloze","markedCloze","lastAttempt","lastAttemptDate","Date","clozesMinusMarked","filter","c","addWordToUserDict","put","DictionaryEntry","onChange","entry","index","entryNum","onEntryClick","PostClozeCards","showDict","showIncorrect","showCorrect","guessedCloze","bind","guessed","answer","setTimeout","checkCorrect","showGuessedCloze"],"mappings":"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","file":"static/js/main.7e874d00.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport './selectLevel.css'\nimport Header from \"./header.js\"\n\nclass SelectLevel extends Component{\n  render() {\n    return (\n      <div>\n       <Header />        \n        <Row>\n          <Col xs = {3}></Col>\n          <Col xs = {6}>\n            <p className=\"selectLevelTitle\">Welcome 欢迎光临!</p>\n            <div className=\"intro-paragraph\">\n              <span>To begin reading posts, please select the level that corresponds to your </span>\n              <a className=\"HSK-link\" href=\"https://en.wikipedia.org/wiki/Hanyu_Shuiping_Kaoshi\" target=\"_blank\">HSK</a>\n              <span> level and we'll provide content appropriate for you!</span>\n            </div> \n          </Col>\n          <Col xs = {3}></Col>\n        </Row>\n        <Row>\n          <Col xs = {4}></Col>\n          <Col xs = {4}>\n            <form action=\"/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"1\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 1</Button>\n            </form>\n            <form action=\"/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"2\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 2</Button>\n            </form>\n            <form action=\"/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"3\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 3</Button>\n            </form>\n            <form action=\"/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"4\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 4</Button>\n            </form>\n            <form action=\"/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"5\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 5</Button>\n            </form>\n            <form action=\"/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"6\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 6</Button>\n            </form>\n          </Col>\n          <Col xs = {4}></Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default SelectLevel;","import React from 'react';\nimport { Component } from 'react'\nimport './login.css'\n\nclass Login extends Component{\n  render() {\n    return (\n      <div>\n       <h3>Logged In</h3>\n       <a href=\"http://localhost:5005/test\">click here!</a>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './postClozes.css'\nimport Header from \"./header.js\"\nimport PostClozeCards from \"./postClozeCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass PostClozes extends Component{\n    componentDidMount() {\n        this.props.getPostClozes(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                <Col xs={2}></Col>\n                    <Col xs={8}>\n                        <Button className=\"lposts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                    </Col>\n                <Col xs={2}></Col>\n            </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.clozes.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Clozes!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"posts-clozes-read-posts\" href=\"/posts/\">Read</Button>\n                                    <Button className=\"posts-clozes-cloze-posts\" href=\"/posts/clozes\">Challenge</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostClozeCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostClozes)","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport './userPage.css'\nimport Header from \"./header.js\"\n\nclass UserPage extends Component{\n    render() {\n        return (\n            <div>\n            <Header />\n                <Row>\n                    <Col xs={4}></Col>\n                    <Col className={\"user-page-buttons\"} xs={4}>\n                        <div><Button className={\"my-clozes\"} href=\"/user/clozes\"> My Clozes</Button></div>\n                        <div><Button className={\"my-words\"} href=\"/user/words\">My Words</Button></div>\n                    </Col>\n                    <Col xs={4}></Col>\n                </Row>\n            </div>\n        )\n    }\n\n}\n\nexport default UserPage","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userClozes.css'\nimport Header from \"./header.js\"\nimport PostClozeCards from \"./postClozeCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserClozes extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false,\n            view: \"incorrect\",\n            incorrectButton: \"button-on\",\n            allButton: \"button-off\"\n        }\n    }\n\n    componentDidMount() {\n        this.props.getUserClozes(this.props.viewNum, this.props.startPost, this.state.view)\n    }\n\n    async handleToggleClick(view) {\n        await this.setState({view: view})\n        this.props.getUserClozes(this.props.viewNum, this.props.startPost, this.state.view)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getUserClozes(this.props.viewNum, (this.props.startPost + 10), this.state.view); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                <Col xs={2}></Col>\n                    <Col xs={8}>\n                        <Button className=\"lposts-clozes-less-posts\" onClick={event => { this.props.getUserClozes(this.props.viewNum, (this.props.startPost - 10), this.state.view); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                    </Col>\n                <Col xs={2}></Col>\n            </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.clozes.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={2}></Col>\n                            <Col xs={8}>\n                                <Button className={this.state.incorrectButton} onClick={() => {this.handleToggleClick(\"incorrect\"); this.setState({allButton: \"button-off\"}); this.setState({incorrectButton: \"button-on\"})}}>Incorrect</Button>\n                                <Button className={this.state.allButton} onClick={() => {this.handleToggleClick(\"all\"); this.setState({incorrectButton: \"button-off\"}); this.setState({allButton: \"button-on\"})}}>All</Button>\n                            </Col>\n                        <Col xs={2}></Col>\n                    </Row>  \n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">See your saved posts here!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className={this.state.incorrectButton} onClick={() => {this.handleToggleClick(\"incorrect\"); this.setState({allButton: \"button-off\"}); this.setState({incorrectButton: \"button-on\"})}}>Incorrect</Button>\n                                    <Button className={this.state.allButton} onClick={() => {this.handleToggleClick(\"all\"); this.setState({incorrectButton: \"button-off\"}); this.setState({allButton: \"button-on\"})}}>All</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostClozeCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserClozes)","import { GET_POSTS } from \"../actions/index.js\"\nimport { array } from \"prop-types\";\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n  }\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_POSTS:\n            console.log(\"in postsReducer: \", action)\n            state = []\n            state = action.payload.data\n            state = shuffle(state)\n            return state\n        default:\n            console.log(\"in postsReducer: \", action)\n            return state\n    }\n}","import { GET_POST_CLOZES, REMOVE_GUESSED_CLOZE, GET_USER_CLOZES } from \"../actions/index.js\"\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n  }\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_POST_CLOZES:\n            let newState = []\n            newState = action.payload.data\n            console.log(newState.clozedPosts[9])\n            if (newState.clozedPosts == undefined) {\n                newState = []\n                return newState\n            } else {\n                for (var i = 0; i < newState.posts.length; i ++) {\n                    newState.posts[i].postClozedTokenizedContent = newState.clozedPosts[i][0]\n                    let multipleChoiceWords = newState.clozedPosts[i][2]\n                    multipleChoiceWords.push(newState.clozedPosts[i][1][0])\n                    let removedWord = newState.clozedPosts[i][1]\n                    newState.posts[i].removedWord = removedWord[0]\n                    multipleChoiceWords = shuffle(multipleChoiceWords)\n                    newState.posts[i].multipleChoiceWords = multipleChoiceWords\n                }\n                return newState.posts\n            }\n        case GET_USER_CLOZES:\n                state = action.payload.data\n                if (state.clozedPosts == undefined) {\n                    state = []\n                    return state\n                } else {\n                    for (var i = 0; i < state.posts.length; i ++) {\n                        state.posts[i].postClozedTokenizedContent = state.clozedPosts[i][0]\n                        let removedWord = state.clozedPosts[i][1]\n                        let multipleChoiceWords = state.clozedPosts[i][2]\n                        multipleChoiceWords.push(state.clozedPosts[i][1][0])\n                        state.posts[i].removedWord = removedWord[0]\n                        multipleChoiceWords = shuffle(multipleChoiceWords)\n                        state.posts[i].multipleChoiceWords = multipleChoiceWords\n                    }\n                    return state.posts\n                }\n        case REMOVE_GUESSED_CLOZE:\n            let stateClozeRemove = []\n            stateClozeRemove = action.payload\n            return stateClozeRemove\n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\"\nimport PostsReducer from \"./postsReducer\"\nimport ViewNumReducer from \"./viewNumReducer\"\nimport PostCountReducer from \"./postCountReducer\"\nimport ClozeReducer from \"./clozeReducer\"\nimport SearchResultReducer from \"./searchResultReducer\"\nimport SearchTermReducer from \"./searchTermReducer\"\nimport WordReducer from \"./wordReducer\"\nimport UserReducer from \"./userReducer\"\n\nconst rootReducer = combineReducers({\n    posts: PostsReducer,\n    clozes: ClozeReducer,\n    startPost: PostCountReducer,\n    viewNum: ViewNumReducer,\n    searchTerm: SearchTermReducer,\n    searchResult: SearchResultReducer,\n    words: WordReducer,\n    user: UserReducer\n})\n\nexport default rootReducer","import { INCREMENT_POST_COUNT, DECREMENT_POST_COUNT } from \"../actions/index.js\"\n\nexport default function(state = 0, action) {\n    switch (action.type) {\n        case INCREMENT_POST_COUNT:\n            let incrementState = state + action.payload\n            return incrementState\n        case  DECREMENT_POST_COUNT:\n            let decrementState = state - action.payload\n            return decrementState\n        default:\n            return state\n    }\n\n}\n\n","import { SET_VIEW_NUM } from \"../actions/index\"\n\nexport default function(state = 10, action) {\n    switch (action.type) {\n        case SET_VIEW_NUM:\n            let newState = action.payload\n        default:\n            return state\n    }\n}","import { NEW_SEARCH_TERM } from \"../actions/index.js\"\n\nexport default function(state = \"\", action) {\n    switch(action.type) {\n        case NEW_SEARCH_TERM:\n            state = action.payload\n            return state\n        default:\n            return state\n    }\n}","import { WORD_SEARCH } from \"../actions/index.js\"\n\nexport default function(state = [], action) {\n    switch(action.type) {\n        case WORD_SEARCH:\n            state = action.payload.data\n            return state\n        default:\n            return state\n    }\n}","import { GET_WORDS } from \"../actions/index.js\"\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_WORDS:\n            state = action.payload.data\n            console.log(action.payload.data)\n            return state\n        default:\n            return state\n    }\n}","import { GET_USER } from \"../actions/index.js\"\n\nexport default function(state = {}, action) {\n    switch (action.type){ \n        case GET_USER:\n            state = action.payload.data\n            console.log(state)\n            return state\n        default:\n            return state\n    }\n}","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col, ModalBody } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport Modal from 'react-bootstrap/Modal'\nimport './postCards.css'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass PostCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false\n        }\n    }\n\n    renderPostWords(postContent) {\n        return (\n            postContent.map(word => {\n                return <span onClick={() => {this.setState({show: true}); this.wordOnClick(word[0])}}>{ word[0] }</span>\n            })\n        )\n    }\n\n    addClozeButton(post) {\n        this.props.addClozeToUser(post)\n        alert(\"Post added for study!\")\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm)\n    }\n\n    renderContentImage(post) {\n        if (post.postImageUrl.length == 0) {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col sm={1}></Col>\n                    <Col sm={10}><div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div></Col>\n                    <Col sm={1}></Col>\n                </Row>\n            )\n        } else {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col xs={8}><div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div></Col>\n                    <Col xs={4}><img className=\"zhihuImage\" src={post.postImageUrl} onError={(e)=>{e.target.onerror = null; e.target.src=\"http://pic.51yuansu.com/pic/cover/00/05/24/5736985738490_610.jpg\"}} /></Col>\n                </Row>\n            )\n        }\n    }\n\n    renderPosts(post) {\n        if (post.postSource == \"weibo\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={8}>\n                                            <div className=\"user\">\n                                                <a href={`https://www.weibo.com/${post.postUserUrl}`} target='_blank'>\n                                                        <Image className=\"userImage\" roundedCircle fluid src={post.postUserImageUrl} />\n                                                        <span>{post.postUser}</span>\n                                                </a>\n                                            </div>\n                                        </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={2} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-weibo fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    <div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div>\n                                    <Row className=\"cardBotom\">     \n                                            <Col xs={6}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                            <Col xs={6}><span class=\"addCloze\" onClick={() => {this.addClozeButton(post)}}>Save Post</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource == \"zhihu_recommended\" || post.postSource == \"zhihu_hot\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                Zhihu Question:\n                                            </a>   \n                                         </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={2} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"cardBotom\">                                    \n                                        <Col xs={6}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                        <Col xs={6}><span class=\"addCloze\" onClick={() => {this.addClozeButton(post)}}>Save Post</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource.slice(0,6) == \"wangyi\" || post.postSource.slice(0,7) == \"toutiao\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                News Article:\n                                            </a>   \n                                         </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={3} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                        <div className=\"postContent\">\n                                            { this.renderContentImage(post)}\n                                        </div>\n                                    <Row className=\"cardBotom\">                                    \n                                        <Col xs={6}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                        <Col xs={6}><span class=\"addCloze\" onClick={() => {this.addClozeButton(post)}}>Save Post</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                {this.props.posts.map(post => (this.renderPosts(post)))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostCards)\n\n    ","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './intro.css'\n\n\n\nclass IntroPosts extends Component {\n    render() {\n        return (\n            <div>\n                <h3 className=\"intro-header\">Welcome to Posts!</h3>\n                <p className=\"intro-paragraph\">On this page you can see read of the recent posts tailored to your reading level!</p>\n                <p className=\"intro-paragraph\">These posts come from various Chinese social media and news outlets</p>\n            </div>\n        )\n    }\n}\n\nexport default IntroPosts","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './posts.css'\nimport Header from \"./header.js\"\nimport PostCards from \"./postCards.js\"\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport IntroPosts from \"./intros/posts.js\"\n\n\nclass Posts extends Component{\n    constructor() {\n        super()\n\n        this.state = {\n            viewNum: 10,\n            startPost: 0,\n            showIntroModal: false\n        }\n    }\n\n    async componentDidMount() {\n        this.props.getPosts(this.props.viewNum, this.props.startPost)\n        await this.props.getUser()\n    }\n\n    async checkNewUser() {\n        if (Object.keys(this.props.user).length > 0) {\n            if ((!this.props.user.visited.includes(\"/posts\")) && (this.state.showIntroModal == false)) {\n                console.log(\"Inside\")\n                this.setState({showIntroModal: true})\n                await this.props.addRoomToUser(\"/posts\")\n            }\n        }\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-less-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-more-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-more-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-less-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        this.checkNewUser()\n        if (this.props.posts.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Posts!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Modal\n                        className=\"intro-modal\"\n                        size={\"s\"} \n                        show={this.state.showIntroModal} \n                        onHide={() => {this.setState({showIntroModal:false})}}>\n                            <Modal.Body class=\"dictionary-body\">\n                                <IntroPosts></IntroPosts>\n                            </Modal.Body>\n                        </Modal>\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"posts-read-posts\" href=\"/posts/\">Read</Button>\n                                    <Button className=\"posts-cloze-posts\" href=\"/posts/clozes\">Challenge</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts,\n        viewNum: state.viewNum,\n        startPost: state.startPost,\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps, actions)(Posts)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col, ModalBody } from 'react-bootstrap'\nimport './wordCards.css'\n\nclass WordCards extends Component{\n\n    renderWord(word) {\n        return (\n            <div className=\"word-card\">\n                <Row>\n                    <Col s={12}>\n                        <div className=\"simplified-traditional\">\n                            <span className=\"word-simplified-char\">Character: {word.simplified}</span>\n                            <span className=\"traditional-char\">  ({word.traditional})</span>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col s={12}>\n                        <div className=\"word-pinyin\">\n                        Pronunciation: {word.pinyin}\n                        </div>\n                        <div className=\"word-POS\">\n                            Part of Speech: {word.partOfSpeech}\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col s={12}>\n                        <div className=\"word-english-definition\">\n                            Definition: {word.english}\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.words.map(word => this.renderWord(word))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words    \n    }\n}\n\n\nexport default connect(mapStateToProps)(WordCards)\n\n    ","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userWords.css'\nimport Header from \"./header.js\"\nimport WordCards from \"./wordCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserWords extends Component {\n    componentDidMount() {\n        this.props.getWords(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.words.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Words!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"words-read-words\" href=\"/user/words\">Read</Button>\n                                    <Button className=\"words-study-words\" href=\"/user/words/study\">Study</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <WordCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserWords)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Card, Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal'\nimport './wordCardsStudy.css'\n\nclass WordCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            wordBack: {},\n            show: false\n        }\n    }\n\n    renderWord(word) {\n        return (\n            <Row>\n                <Col s={10}>\n                    <div>\n                        <Row>\n                            <Col md={2}></Col>\n                            <Col md={8}>\n                                <Card className=\"word-study-card\" onClick={event => {this.setState({ wordBack: word}); this.setState({show: true})}}>\n                                    <div class=\"card-body\">\n                                        {word.simplified}\n                                    </div>\n                                </Card>\n                            </Col>\n                            <Col md={2}></Col>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>    \n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"word-modal\"\n                id=\"word-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"word-body\">\n                        <div className=\"word-back-card\">\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"simplified-traditional\">\n                                        <span className=\"word-simplified-char\">Character: {this.state.wordBack.simplified}</span>\n                                        <span className=\"traditional-char\">  ({this.state.wordBack.traditional})</span>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"word-pinyin\">\n                                    Pronunciation: {this.state.wordBack.pinyin}\n                                    </div>\n                                    <div className=\"word-POS\">\n                                        Part of Speech: {this.state.wordBack.partOfSpeech}\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"word-english-definition\">\n                                        Definition: {this.state.wordBack.english}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                {this.props.words.map(word => this.renderWord(word))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words    \n    }\n}\n\n\nexport default connect(mapStateToProps)(WordCards)\n\n    ","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userWordsStudy.css'\nimport Header from \"./header.js\"\nimport WordCardsStudy from \"./wordCardsStudy.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserWordsStudy extends Component {\n    componentDidMount() {\n        this.props.getWords(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.words.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Words!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"study-read-words\" href=\"/user/words\">Read</Button>\n                                    <Button className=\"study-study-words\" href=\"/user/words/study\">Study</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <WordCardsStudy />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserWordsStudy)","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport promise from \"redux-promise\";\nimport Posts from \"./components/posts.js\"\nimport SelectLevel from \"./components/selectLevel.js\"\nimport Login from \"./components/login.js\"\nimport PostClozes from \"./components/postClozes.js\"\nimport './index.css'\nimport UserPage from \"./components/userPage\"\nimport UserClozes from \"./components/userClozes\"\nimport UserWords from \"./components/userWords\"\nimport UserWordsStudy from \"./components/userWordsStudy\"\n\nimport rootReducer from \"./reducers/index.js\";\n\nconst proxy = require('http-proxy-middleware')\n\nmodule.exports = function(app) {\n    // add other server routes to path array\n    app.use(proxy(['/api' ], { target: 'http://localhost:5000' }));\n}\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(rootReducer)}>\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={SelectLevel} />\n          <Route exact path=\"/test\" component={Login} />\n          <Route exact path=\"/posts\" component={Posts} />\n          <Route exact path=\"/posts/clozes\" component={PostClozes} />\n          <Route exact path=\"/user\" component={UserPage} />\n          <Route exact path=\"/user/clozes\" component={UserClozes} />\n          <Route exact path=\"/user/words\" component={UserWords} />\n          <Route exact path=\"/user/words/study\" component={UserWordsStudy} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)","import React from 'react';\nimport { Component} from 'react'\nimport { Link } from \"react-router-dom\"\nimport './header.css'\nimport Modal from 'react-bootstrap/Modal'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\n\nclass Header extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                <div className=\"header\">\n                    <Link to={\"/user\"}><span className=\"user-icon\"><i class=\"fas fa-user fa-1x\"></i></span></Link>\n                    <Link to={\"/posts\"}><span className=\"header-text\">Cloze Weibo</span></Link>\n                    <span className=\"search-icon\"><i class=\"fas fa-search fa-1x\" onClick={() => {this.setState({show:true})}}></i></span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import axios from \"axios\"\n\n// const ROOT_URL = \"http://localhost:5005\"\n\nexport const GET_POSTS = 'get_posts'\nexport const GET_POST_CLOZES = \"get_post_clozes\"\nexport const INCREMENT_POST_COUNT = \"increment_post_count\"\nexport const DECREMENT_POST_COUNT = \"decrement_post_count\"\nexport const SET_VIEW_NUM = \"set_view_num\"\nexport const REMOVE_GUESSED_CLOZE = \"remove_guessed_cloze\"\nexport const WORD_SEARCH = \"word_search\"\nexport const NEW_SEARCH_TERM = \"new_search_term\"\nexport const GET_USER_CLOZES = \"get_users_clozes\"\nexport const GET_WORDS = \"get_words\"\nexport const GET_USER = \"get_user\"\n\nexport function getUser() {\n    const user = axios.get(`https://sleepy-garden-68724.herokuapp.com/backend/userinfo`, {withCredentials: true})\n\n    return {\n        type: GET_USER,\n        payload: user\n    }\n}\n\nexport function getPosts(viewNum, startPost) {\n    const posts = axios.get(`https://sleepy-garden-68724.herokuapp.com/backend/posts?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_POSTS,\n        payload: posts\n    }\n}\n\nexport async function getPostClozes(viewNum, startPost) {\n    const clozes = await axios.get(`https://sleepy-garden-68724.herokuapp.com/backend/posts/clozes?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_POST_CLOZES,\n        payload: clozes\n    }\n}\n\nexport function getUserClozes(viewNum, startPost, view) {\n    const userClozes = axios.get(`https://sleepy-garden-68724.herokuapp.com/backend/user/clozes?viewNum=${viewNum}&startPost=${startPost}&view=${view}`, {withCredentials: true})\n\n    return {\n        type: GET_USER_CLOZES,\n        payload: userClozes\n    }\n}\n\nexport async function getWords(viewNum, startPost, view) {\n    const words = await axios.get(`https://sleepy-garden-68724.herokuapp.com/backend/user/words?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_WORDS,\n        payload: words\n    }\n}\n\nexport function incrementPostNumber(amount) {\n    return {\n        type: INCREMENT_POST_COUNT,\n        payload: amount\n    }\n}\n\nexport function decrementPostNumber(amount) {\n    return {\n        type: DECREMENT_POST_COUNT,\n        payload: amount\n    }\n}\n\nexport function markClozeCorrect(mark, cloze, clozes) {\n    let markedCloze = cloze\n    markedCloze.lastAttempt = mark\n    markedCloze.lastAttemptDate = new Date()\n\n    const postMarkedCloze = axios.post(`https://sleepy-garden-68724.herokuapp.com/backend/posts/clozes`, markedCloze, {withCredentials: true})\n\n    let clozesMinusMarked = clozes.filter(c => {\n        return c.postContent != cloze.postContent\n    })\n\n    return {\n        type: REMOVE_GUESSED_CLOZE,\n        payload: clozesMinusMarked\n    }\n}\n\nexport function addClozeToUser(cloze) {\n    let markedCloze = cloze\n    markedCloze.lastAttempt = \"incorrect\"\n    markedCloze.lastAttemptDate = new Date()\n    markedCloze.postClozedTokenizedContent = cloze.postTokenizedContent\n    markedCloze.multipleChoiceWords = []\n    markedCloze.removedWord = \"\"\n\n    const postMarkedCloze = axios.post(`https://sleepy-garden-68724.herokuapp.com/backend/posts/clozes`, markedCloze, {withCredentials: true})\n\n    return postMarkedCloze \n}\n\nexport function wordSearch(word) {\n    const searchResult = axios.get(`https://sleepy-garden-68724.herokuapp.com/backend/wordsearch?query=${word}`, {withCredentials: true})\n\n    return {\n        type: WORD_SEARCH,\n        payload: searchResult\n    }\n\n}\n\nexport function addWordToUserDict(word) {\n    const addWord = axios.put(axios.post(`https://sleepy-garden-68724.herokuapp.com/backend/addWordToDict`, word, {withCredentials: true}))\n\n    return addWord\n}\n\nexport function newSearchTerm(searchTerm) {\n    return {\n        type: NEW_SEARCH_TERM,\n        payload: searchTerm\n    }\n}","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal'\nimport './dictionaryEntry.css'\nimport * as actions from \"../actions/index.js\"\n\nclass DictionaryEntry extends Component{\n\n    onEntryClick(word) {\n        this.props.addWordToUserDict(word)\n        alert(`${word.simplified} added to your dictionary!`)\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm)\n    }\n\n    render() {\n        if (this.props.word.length == 0 ) {\n            return (\n                <div>\n                    <Row className=\"dictionary-top\">\n                        <h4 className=\"dictionary-title\">Search the Dictionary:</h4>\n                        <span>\n                            <form className=\"input-group search-bar\">\n                                <input\n                                    value={this.props.searchTerm}\n                                    onChange={(event) => {console.log(event.target.value);this.wordOnClick(event.target.value)}}\n                                />\n                            </form>\n                        </span>\n                    </Row>\n                    <div>searching the dictionary...</div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Row className=\"dictionary-top\">\n                        <h4 className=\"dictionary-title\">Search the Dictionary:</h4>\n                        <span>\n                            <form className=\"input-group search-bar\">\n                                <input\n                                    value={this.props.searchTerm}\n                                    onChange={(event) => {console.log(event.target.value);this.wordOnClick(event.target.value)}}\n                                />\n                            </form>\n                        </span>\n                    </Row>\n                    {\n                    this.props.word.map((entry, index) => {\n                        let entryNum = index + 1\n                        return (\n                            <div className=\"entry\">\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"simplified-traditional\">\n                                            <span className= \"entry-num\">{entryNum}.</span>\n                                            <span className=\"simplified-char\">Character: {entry.simplified}</span>\n                                            {/* <span className=\"traditional-char\">({entry.traditional})</span> */}\n                                            <span class=\"material-icons add-word\" onClick={() => {this.onEntryClick(entry)}}>add_circle_outline</span>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"pinyin\">\n                                        Pronunciation: {entry.pinyin}\n                                        </div>\n                                        <div className=\"entry-POS\">\n                                            Part of Speech: {entry.partOfSpeech}\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"english-definition\">\n                                            Definition: {entry.english}\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n            )\n        }\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        word: state.searchResult,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(DictionaryEntry)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col } from 'react-bootstrap'\nimport './postClozeCards.css'\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\n\nclass PostClozeCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            showDict: false,\n            showIncorrect: false,\n            showCorrect: false,\n            guessedCloze: {},\n            searchTerm: \"\"\n        }\n\n        this.wordOnClick = this.wordOnClick.bind(this)\n    }\n\n    async checkCorrect(guessed, answer, cloze) {\n        if (guessed == answer) {\n            let mark=\"correct\"\n            this.props.markClozeCorrect(mark, cloze, this.props.clozes)\n            this.setState({showCorrect: true})\n            setTimeout(() => {this.setState({showCorrect: false})}, 1000)\n        } else {\n            let mark=\"incorrect\"\n            this.props.markClozeCorrect(mark, cloze, this.props.clozes)\n            await this.setState({guessedCloze: cloze}, this.setState({showIncorrect: true}))\n        }\n    }\n\n    renderPostWords(postContent) {\n        return (\n            postContent.map(word => {\n                return <span onClick={() => {this.setState({showDict: true}); this.wordOnClick(word[0])}}>{ word[0] }</span>\n            })\n        )\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm)\n    }\n\n    renderContentImage(post) {\n        if (post.postImageUrl.length == 0) {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col sm={1}></Col>\n                    <Col sm={10}><div>{ this.renderPostWords(post.postClozedTokenizedContent) }</div></Col>\n                    <Col sm={1}></Col>\n                </Row>\n            )\n        } else {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col xs={8}><div>{ this.renderPostWords(post.postClozedTokenizedContent) }</div></Col>\n                    <Col xs={4}><img className=\"zhihuImage\" src={post.postImageUrl} onError={(e)=>{e.target.onerror = null; e.target.src=\"http://pic.51yuansu.com/pic/cover/00/05/24/5736985738490_610.jpg\"}} /></Col>\n                </Row>\n            )\n        }\n    }\n\n    showGuessedCloze() {\n        console.log(\"this.state\", this.state)\n        return (\n            <div className=\"show-incorrect\">\n                <div>The correct answer is</div>\n                <div>{this.state.guessedCloze.removedWord}</div>\n                <br/>\n                <div>Full post: </div>\n                <div>{this.state.guessedCloze.postContent}</div>\n            </div>\n        )\n    }\n\n    showCorrect() {\n        return (\n            <div>\n                <i class=\"fas fa-check fa10x\"></i>\n                <div>Correct!</div>\n            </div>\n        )\n    }\n\n    renderPosts(post) {\n        if (post.postSource == \"weibo\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <div className=\"user\">\n                                                <a href={`https://www.weibo.com/${post.postUserUrl}`} target='_blank'>\n                                                        <Image className=\"userImage\" roundedCircle fluid src={post.postUserImageUrl} />\n                                                        <span>{post.postUser}</span>\n                                                </a>\n                                            </div>\n                                        </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={3} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-weibo fa-1x\"></i>\n                                        </Col>\n                                    </Row>                                 \n                                    <div className=\"postContent\">{ this.renderPostWords(post.postClozedTokenizedContent) }</div>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource == \"zhihu_recommended\" || post.postSource == \"zhihu_hot\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                Zhihu Question:\n                                            </a>   \n                                         </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={3} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource.slice(0,6) == \"wangyi\" || post.postSource.slice(0,7) == \"toutiao\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row className=\"card-top\">\n                                        <Col s={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                News Article:\n                                            </a>   \n                                         </Col>\n                                        <Col s={2}><div className=\"post-level\">Level {post.postLevel}</div></Col>\n                                        <Col s={3} className=\"source-icon\">\n                                            <span className=\"source\">Source</span>\n                                            <i class=\"fab fa-zhihu fa-1x\"></i>\n                                        </Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.showDict} \n                onHide={() => {this.setState({showDict:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                <Modal\n                className=\"cloze-modal\"\n                id=\"cloze-modal\"\n                size={\"s\"} \n                show={this.state.showIncorrect} \n                onHide={() => {this.setState({showIncorrect:false})}}>\n                    <Modal.Body class=\"show-incorrect-body\">\n                        {this.showGuessedCloze()}\n                    </Modal.Body>\n                </Modal>\n                <Modal\n                className=\"correct-modal\"\n                id=\"correct-modal\"\n                size={\"s\"} \n                show={this.state.showCorrect} \n                onHide={() => {this.setState({showCorrect:false})}}>\n                    <Modal.Body class=\"show-incorrect-body\">\n                        {this.showCorrect()}\n                    </Modal.Body>\n                </Modal>\n                {this.props.clozes.map(post => (this.renderPosts(post)))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostClozeCards)\n\n    "],"sourceRoot":""}