{"version":3,"sources":["actions/index.js","components/dictionaryEntry.js","components/header.js","components/postCards.js","components/posts.js","components/selectLevel.js","components/login.js","components/postClozeCards.js","components/postClozes.js","components/userPage.js","components/userClozes.js","components/wordCards.js","components/userWords.js","components/wordCardsStudy.js","components/userWordsStudy.js","reducers/postsReducer.js","reducers/clozeReducer.js","reducers/index.js","reducers/postCountReducer.js","reducers/viewNumReducer.js","reducers/searchTermReducer.js","reducers/searchResultReducer.js","reducers/wordReducer.js","index.js"],"names":["ROOT_URL","GET_POSTS","GET_POST_CLOZES","INCREMENT_POST_COUNT","DECREMENT_POST_COUNT","SET_VIEW_NUM","REMOVE_GUESSED_CLOZE","WORD_SEARCH","NEW_SEARCH_TERM","GET_USER_CLOZES","GET_WORDS","getPosts","viewNum","startPost","posts","axios","get","withCredentials","type","payload","getPostClozes","a","clozes","getUserClozes","view","userClozes","getWords","words","console","log","incrementPostNumber","amount","decrementPostNumber","markClozeCorrect","mark","cloze","markedCloze","lastAttempt","lastAttemptDate","Date","post","clozesMinusMarked","filter","c","postContent","addClozeToUser","postClozedTokenizedContent","postTokenizedContent","multipleChoiceWords","removedWord","wordSearch","word","searchResult","addWordToUserDict","put","newSearchTerm","searchTerm","DictionaryEntry","this","props","alert","simplified","length","Row","className","value","onChange","event","target","wordOnClick","map","entry","index","entryNum","Col","s","traditional","class","onClick","onEntryClick","pinyin","partOfSpeech","english","Component","connect","state","actions","Header","show","Modal","id","size","onHide","setState","Body","to","PostCards","postImageUrl","sm","renderPostWords","xs","src","onError","e","onerror","postSource","md","Card","href","postUserUrl","Image","roundedCircle","fluid","postUserImageUrl","postUser","dateRetrieved","slice","postLevel","addClozeButton","postUrl","renderContentImage","renderPosts","Posts","Button","window","scrollTo","prps","renderButtons","SelectLevel","action","method","name","variant","block","Login","PostClozeCards","bind","guessed","answer","checkCorrect","PostClozes","UserPage","UserClozes","incorrectButton","allButton","handleToggleClick","WordCards","renderWord","UserWords","wordBack","UserWordsStudy","shuffle","j","x","i","Math","floor","random","rootReducer","combineReducers","data","newState","clozedPosts","undefined","push","incrementState","decrementState","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","store","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.c1240953.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst ROOT_URL = \"http://localhost:5005\"\n\nexport const GET_POSTS = 'get_posts'\nexport const GET_POST_CLOZES = \"get_post_clozes\"\nexport const INCREMENT_POST_COUNT = \"increment_post_count\"\nexport const DECREMENT_POST_COUNT = \"decrement_post_count\"\nexport const SET_VIEW_NUM = \"set_view_num\"\nexport const REMOVE_GUESSED_CLOZE = \"remove_guessed_cloze\"\nexport const WORD_SEARCH = \"word_search\"\nexport const NEW_SEARCH_TERM = \"new_search_term\"\nexport const GET_USER_CLOZES = \"get_users_clozes\"\nexport const GET_WORDS = \"get_words\"\n\nexport function getPosts(viewNum, startPost) {\n    const posts = axios.get(`${ROOT_URL}/posts?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_POSTS,\n        payload: posts\n    }\n}\n\nexport async function getPostClozes(viewNum, startPost) {\n    const clozes = await axios.get(`${ROOT_URL}/posts/clozes?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    return {\n        type: GET_POST_CLOZES,\n        payload: clozes\n    }\n}\n\nexport function getUserClozes(viewNum, startPost, view) {\n    const userClozes = axios.get(`${ROOT_URL}/user/clozes?viewNum=${viewNum}&startPost=${startPost}&view=${view}`, {withCredentials: true})\n\n    return {\n        type: GET_USER_CLOZES,\n        payload: userClozes\n    }\n}\n\nexport async function getWords(viewNum, startPost, view) {\n    const words = await axios.get(`${ROOT_URL}/user/words?viewNum=${viewNum}&startPost=${startPost}`, {withCredentials: true})\n\n    console.log(`${ROOT_URL}/user/clozes?viewNum=${viewNum}&startPost=${startPost}&view=${view}`)\n    return {\n        type: GET_WORDS,\n        payload: words\n    }\n}\n\nexport function incrementPostNumber(amount) {\n    return {\n        type: INCREMENT_POST_COUNT,\n        payload: amount\n    }\n}\n\nexport function decrementPostNumber(amount) {\n    return {\n        type: DECREMENT_POST_COUNT,\n        payload: amount\n    }\n}\n\nexport function markClozeCorrect(mark, cloze, clozes) {\n    let markedCloze = cloze\n    markedCloze.lastAttempt = mark\n    markedCloze.lastAttemptDate = new Date()\n\n    const postMarkedCloze = axios.post(`${ROOT_URL}/posts/clozes`, markedCloze, {withCredentials: true})\n\n    let clozesMinusMarked = clozes.filter(c => {\n        return c.postContent != cloze.postContent\n    })\n\n    return {\n        type: REMOVE_GUESSED_CLOZE,\n        payload: clozesMinusMarked\n    }\n}\n\nexport function addClozeToUser(cloze) {\n    let markedCloze = cloze\n    markedCloze.lastAttempt = \"incorrect\"\n    markedCloze.lastAttemptDate = new Date()\n    markedCloze.postClozedTokenizedContent = cloze.postTokenizedContent\n    markedCloze.multipleChoiceWords = []\n    markedCloze.removedWord = \"\"\n\n    const postMarkedCloze = axios.post(`${ROOT_URL}/posts/clozes`, markedCloze, {withCredentials: true})\n\n    return postMarkedCloze \n}\n\nexport function wordSearch(word) {\n    const searchResult = axios.get(`${ROOT_URL}/wordsearch?query=${word}`, {withCredentials: true})\n\n    return {\n        type: WORD_SEARCH,\n        payload: searchResult\n    }\n\n}\n\nexport function addWordToUserDict(word) {\n    const addWord = axios.put(axios.post(`${ROOT_URL}/addWordToDict`, word, {withCredentials: true}))\n\n    return addWord\n}\n\nexport function newSearchTerm(searchTerm) {\n    return {\n        type: NEW_SEARCH_TERM,\n        payload: searchTerm\n    }\n}","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal'\nimport './dictionaryEntry.css'\nimport * as actions from \"../actions/index.js\"\n\nclass DictionaryEntry extends Component{\n\n    onEntryClick(word) {\n        this.props.addWordToUserDict(word)\n        alert(`${word.simplified} added to your dictionary!`)\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm)\n    }\n\n    render() {\n        if (this.props.word.length == 0 ) {\n            return (\n                <div>\n                    <Row>\n                        <span>\n                            <form className=\"input-group search-bar\">\n                                <input\n                                    value={this.props.searchTerm}\n                                    onChange={(event) => {console.log(event.target.value);this.wordOnClick(event.target.value)}}\n                                />\n                            </form>\n                        </span>\n                    </Row>\n                    <div>searching the dictionary...</div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Row>\n                        <span>\n                            <form className=\"input-group search-bar\">\n                                <input\n                                    value={this.props.searchTerm}\n                                    onChange={(event) => {console.log(event.target.value);this.wordOnClick(event.target.value)}}\n                                />\n                            </form>\n                        </span>\n                    </Row>\n                    {\n                    this.props.word.map((entry, index) => {\n                        let entryNum = index + 1\n                        return (\n                            <div className=\"entry\">\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"simplified-traditional\">\n                                            <span className= \"entry-num\">{entryNum}.</span>\n                                            <span className=\"simplified-char\">{entry.simplified}</span>\n                                            <span className=\"traditional-char\">({entry.traditional})</span>\n                                            <span class=\"material-icons add-word\" onClick={() => {this.onEntryClick(entry)}}>add_circle_outline</span>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"pinyin\">\n                                            {entry.pinyin}\n                                        </div>\n                                        <div className=\"entry-POS\">{entry.partOfSpeech}</div>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col s={12}>\n                                        <div className=\"english-definition\">\n                                            {entry.english}\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n            )\n        }\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        word: state.searchResult,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(DictionaryEntry)","import React from 'react';\nimport { Component} from 'react'\nimport { Link } from \"react-router-dom\"\nimport './header.css'\nimport Modal from 'react-bootstrap/Modal'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\n\nclass Header extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                <div className=\"header\">\n                    <Link to={\"/user\"}><span className=\"user-icon\"><i class=\"fas fa-user fa-1x\"></i></span></Link>\n                    <Link to={\"/posts\"}><span className=\"header-text\">Cloze Weibo</span></Link>\n                    <span className=\"search-icon\"><i class=\"fas fa-search fa-1x\" onClick={() => {this.setState({show:true})}}></i></span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col, ModalBody } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport Modal from 'react-bootstrap/Modal'\nimport './postCards.css'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass PostCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false\n        }\n    }\n\n    renderPostWords(postContent) {\n        return (\n            postContent.map(word => {\n                return <span onClick={() => {this.setState({show: true}); this.wordOnClick(word[0])}}>{ word[0] }</span>\n            })\n        )\n    }\n\n    addClozeButton(post) {\n        this.props.addClozeToUser(post)\n        alert(\"Post added for study!\")\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm)\n    }\n\n    renderContentImage(post) {\n        if (post.postImageUrl.length == 0) {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col sm={1}></Col>\n                    <Col sm={10}><div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div></Col>\n                    <Col sm={1}></Col>\n                </Row>\n            )\n        } else {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col xs={8}><div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div></Col>\n                    <Col xs={4}><img className=\"zhihuImage\" src={post.postImageUrl} onError={(e)=>{e.target.onerror = null; e.target.src=\"http://pic.51yuansu.com/pic/cover/00/05/24/5736985738490_610.jpg\"}} /></Col>\n                </Row>\n            )\n        }\n    }\n\n    renderPosts(post) {\n        console.log(post)\n        if (post.postSource == \"weibo\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <div className=\"user\">\n                                        <a href={`https://www.weibo.com/${post.postUserUrl}`} target='_blank'>\n                                                <Image className=\"userImage\" roundedCircle fluid src={post.postUserImageUrl} />\n                                                <span>{post.postUser}</span>\n                                        </a>\n                                        <i class=\"fab fa-weibo fa-2x\"></i>\n                                    </div>\n                                    <div className=\"postContent\">{ this.renderPostWords(post.postTokenizedContent) }</div>\n                                    <Row className=\"cardBotom\">     \n                                            <Col xs={4}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                            <Col xs={4}><div className=\"postLevel\">Level: {post.postLevel}</div></Col>                               \n                                            <Col xs={4}><span class=\"material-icons addCloze\" onClick={() => {this.addClozeButton(post)}}>add_circle_outline</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource == \"zhihu_recommended\" || post.postSource == \"zhihu_hot\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row>\n                                        <Col xs={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                Zhihu Question:\n                                            </a>   \n                                        </Col>\n                                        <Col xs={5}><div><i class=\"fab fa-zhihu fa-2x\"></i></div></Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"cardBotom\">                                    \n                                        <Col xs={4}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                        <Col xs={4}><div className=\"postLevel\">Level: {post.postLevel}</div></Col>\n                                        <Col xs={4}><span class=\"material-icons addCloze\" onClick={() => {this.addClozeButton(post)}}>add_circle_outline</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource.slice(0,6) == \"wangyi\" || post.postSource.slice(0,7) == \"toutiao\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row>\n                                        <Col xs={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'>News Article:</a>\n                                        </Col>\n                                        <Col xs={5}><div><i class=\"far fa-newspaper fa-2x\"></i></div></Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"cardBotom\">                                    \n                                        <Col xs={4}><div className=\"postDate\">{post.dateRetrieved.slice(0,10)}</div></Col>\n                                        <Col xs={4}><div className=\"postLevel\">Level: {post.postLevel}</div></Col>\n                                        <Col xs={4}><span class=\"material-icons addCloze\" onClick={() => {this.addClozeButton(post)}}>add_circle_outline</span></Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                {this.props.posts.map(post => (this.renderPosts(post)))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostCards)\n\n    ","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './posts.css'\nimport Header from \"./header.js\"\nimport PostCards from \"./postCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass Posts extends Component{\n    constructor() {\n        super()\n\n        this.state = {\n            viewNum: 10,\n            startPost: 0\n        }\n    }\n\n    componentDidMount() {\n        this.props.getPosts(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-less-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-more-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-more-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-less-posts\" onClick={event => { this.props.getPosts(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.posts.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Posts!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"posts-read-posts\" href=\"/posts/\">Read</Button>\n                                    <Button className=\"posts-cloze-posts\" href=\"/posts/clozes\">Challenge</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(Posts)","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport './selectLevel.css'\nimport Header from \"./header.js\"\n\nclass SelectLevel extends Component{\n  render() {\n    return (\n      <div>\n       <Header />        \n        <Row>\n          <Col xs = {3}></Col>\n          <Col xs = {6}>\n            <p className=\"selectLevelTitle\">Welcome 欢迎光临!</p>\n            <div className=\"intro-paragraph\">\n              <span>To begin reading posts, please select the level that corresponds to your </span>\n              <a className=\"HSK-link\" href=\"https://en.wikipedia.org/wiki/Hanyu_Shuiping_Kaoshi\" target=\"_blank\"> HSK </a>\n              <span> level and we'll provide content appropriate for you!</span>\n            </div> \n          </Col>\n          <Col xs = {3}></Col>\n        </Row>\n        <Row>\n          <Col xs = {4}></Col>\n          <Col xs = {4}>\n            <form action=\"http://localhost:5005/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"1\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 1</Button>\n            </form>\n            <form action=\"http://localhost:5005/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"2\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 2</Button>\n            </form>\n            <form action=\"http://localhost:5005/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"3\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 3</Button>\n            </form>\n            <form action=\"http://localhost:5005/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"4\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 4</Button>\n            </form>\n            <form action=\"http://localhost:5005/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"5\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 5</Button>\n            </form>\n            <form action=\"http://localhost:5005/login\" method=\"post\">\n              <div className=\"usernamePassword\">\n                <label>Username:</label>\n                <input type=\"text\" name=\"username\" value=\"6\"/>\n              </div>\n              <div className=\"usernamePassword\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value=\"password\"/>\n              </div>\n              <Button variant = \"secondary\" type=\"submit\" value=\"Log In\" className=\"level-button\" block>Level 6</Button>\n            </form>\n          </Col>\n          <Col xs = {4}></Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default SelectLevel;","import React from 'react';\nimport { Component } from 'react'\nimport './login.css'\n\nclass Login extends Component{\n  render() {\n    return (\n      <div>\n       <h3>Logged In</h3>\n       <a href=\"http://localhost:5005/test\">click here!</a>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col } from 'react-bootstrap'\nimport './postClozeCards.css'\nimport * as actions from \"../actions/index.js\"\nimport Modal from 'react-bootstrap/Modal'\nimport DictionaryEntry from \"./dictionaryEntry.js\"\n\nclass PostClozeCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false,\n            searchTerm: \"\"\n        }\n\n        this.wordOnClick = this.wordOnClick.bind(this)\n    }\n\n    checkCorrect(guessed, answer, cloze) {\n        if (guessed == answer) {\n            alert(\"宝贝很棒哦！\\n Correct!\")\n            let mark=\"correct\"\n            this.props.markClozeCorrect(mark, cloze, this.props.clozes)\n        } else {\n            alert(\"哎呀！宝贝要加油啊！\\n Incorrect!\")\n            let mark=\"incorrect\"\n            this.props.markClozeCorrect(mark, cloze, this.props.clozes)\n        }\n    }\n\n    renderPostWords(postContent) {\n        return (\n            postContent.map(word => {\n                return <span onClick={() => {this.setState({show: true}); this.wordOnClick(word[0])}}>{ word[0] }</span>\n            })\n        )\n    }\n\n    async wordOnClick(word) {\n        await this.props.newSearchTerm(word)\n        this.props.wordSearch(this.props.searchTerm)\n    }\n\n    renderContentImage(post) {\n        if (post.postImageUrl.length == 0) {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col sm={1}></Col>\n                    <Col sm={10}><div>{ this.renderPostWords(post.postClozedTokenizedContent) }</div></Col>\n                    <Col sm={1}></Col>\n                </Row>\n            )\n        } else {\n            return (\n                <Row className=\"zhihuContent\">\n                    <Col xs={8}><div>{ this.renderPostWords(post.postClozedTokenizedContent) }</div></Col>\n                    <Col xs={4}><img className=\"zhihuImage\" src={post.postImageUrl} onError={(e)=>{e.target.onerror = null; e.target.src=\"http://pic.51yuansu.com/pic/cover/00/05/24/5736985738490_610.jpg\"}} /></Col>\n                </Row>\n            )\n        }\n    }\n\n    renderPosts(post) {\n        if (post.postSource == \"weibo\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row>\n                                        <Col xs={7}>\n                                            <a href={`https://www.weibo.com/${post.postUserUrl}`} target='_blank'>\n                                                <Image className=\"userImage\" roundedCircle fluid src={post.postUserImageUrl} />\n                                                <span>{post.postUser}</span>\n                                            </a>\n                                        </Col>\n                                        <Col xs={5}><div><i class=\"fab fa-zhihu fa-2x\"></i></div></Col>\n                                    </Row>                                    <div className=\"postContent\">{ this.renderPostWords(post.postClozedTokenizedContent) }</div>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource == \"zhihu_recommended\" || post.postSource == \"zhihu_hot\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row>\n                                        <Col xs={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'> \n                                                Zhihu Question:\n                                            </a>   \n                                        </Col>\n                                        <Col xs={5}><div><i class=\"fab fa-zhihu fa-2x\"></i></div></Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        } else if (post.postSource.slice(0,6) == \"wangyi\" || post.postSource.slice(0,7) == \"toutiao\") {\n            return (\n                <div>\n                    <Row>\n                        <Col md={2}></Col>\n                        <Col md={8}>\n                            <Card className=\"postCard\">\n                                <div class=\"card-body\">\n                                    <Row>\n                                        <Col xs={7}>\n                                            <a className=\"postUrl\" href={post.postUrl} target='_blank'>News Article:</a>\n                                        </Col>\n                                        <Col xs={5}><div><i class=\"far fa-newspaper fa-2x\"></i></div></Col>\n                                    </Row>\n                                    { this.renderContentImage(post)}\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[0] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[0] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[1] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[1] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                    <Row className=\"multipleChoiceTop\">     \n                                        <Col xs={2}></Col>\n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[2] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[2] }</Button>\n                                        </Col>                               \n                                        <Col xs={4}>\n                                            <Button className=\"multiple-choice\" value={ post.multipleChoiceWords[3] } onClick={event => {this.checkCorrect(event.target.value, post.removedWord, post)}}>{ post.multipleChoiceWords[3] }</Button>\n                                        </Col>   \n                                        <Col xs={2}></Col>     \n                                    </Row>\n                                </div>\n                            </Card>\n                        </Col>\n                        <Col md={2}></Col>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"dictionary-modal\"\n                id=\"dict-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"dictionary-body\">\n                        <DictionaryEntry></DictionaryEntry>\n                    </Modal.Body>\n                </Modal>\n                {this.props.clozes.map(post => (this.renderPosts(post)))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        searchTerm: state.searchTerm\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostClozeCards)\n\n    ","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './postClozes.css'\nimport Header from \"./header.js\"\nimport PostClozeCards from \"./postClozeCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass PostClozes extends Component{\n    componentDidMount() {\n        this.props.getPostClozes(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                <Col xs={2}></Col>\n                    <Col xs={8}>\n                        <Button className=\"lposts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                    </Col>\n                <Col xs={2}></Col>\n            </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.clozes.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Clozes!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"posts-clozes-read-posts\" href=\"/posts/\">Read</Button>\n                                    <Button className=\"posts-clozes-cloze-posts\" href=\"/posts/clozes\">Challenge</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostClozeCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(PostClozes)","import React from 'react';\nimport { Component } from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport './userPage.css'\nimport Header from \"./header.js\"\n\nclass UserPage extends Component{\n    render() {\n        return (\n            <div>\n            <Header />\n                <Row>\n                    <Col xs={4}></Col>\n                    <Col className={\"user-page-buttons\"} xs={4}>\n                        <div><Button className={\"my-clozes\"} href=\"/user/clozes\"> My Clozes</Button></div>\n                        <div><Button className={\"my-words\"} href=\"/user/words\">My Words</Button></div>\n                    </Col>\n                    <Col xs={4}></Col>\n                </Row>\n            </div>\n        )\n    }\n\n}\n\nexport default UserPage","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userClozes.css'\nimport Header from \"./header.js\"\nimport PostClozeCards from \"./postClozeCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserClozes extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            show: false,\n            view: \"incorrect\",\n            incorrectButton: \"button-on\",\n            allButton: \"button-off\"\n        }\n    }\n\n    componentDidMount() {\n        this.props.getUserClozes(this.props.viewNum, this.props.startPost, this.state.view)\n    }\n\n    async handleToggleClick(view) {\n        await this.setState({view: view})\n        this.props.getUserClozes(this.props.viewNum, this.props.startPost, this.state.view)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"posts-clozes-less-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getPostClozes(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"posts-clozes-more-posts\" onClick={event => { this.props.getUserClozes(this.props.viewNum, (this.props.startPost + 10), this.state.view); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                <Col xs={2}></Col>\n                    <Col xs={8}>\n                        <Button className=\"lposts-clozes-less-posts\" onClick={event => { this.props.getUserClozes(this.props.viewNum, (this.props.startPost - 10), this.state.view); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                    </Col>\n                <Col xs={2}></Col>\n            </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.clozes.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">See your saved posts here!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className={this.state.incorrectButton} onClick={() => {this.handleToggleClick(\"incorrect\"); this.setState({allButton: \"button-off\"}); this.setState({incorrectButton: \"button-on\"})}}>Incorrect</Button>\n                                    <Button className={this.state.allButton} onClick={() => {this.handleToggleClick(\"all\"); this.setState({incorrectButton: \"button-off\"}); this.setState({allButton: \"button-on\"})}}>All</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <PostClozeCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        clozes: state.clozes,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserClozes)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Image, Row, Col, ModalBody } from 'react-bootstrap'\nimport './wordCards.css'\n\nclass WordCards extends Component{\n\n    renderWord(word) {\n        return (\n            <Row>\n                <Col s={10}>\n                    <div className=\"word-card\">\n                        <Row>\n                            <Col s={12}>\n                                <div className=\"simplified-traditional\">\n                                    <span className=\"simplified-char\">{word.simplified}</span>\n                                    <span className=\"traditional-char\">({word.traditional})</span>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col s={12}>\n                                <div className=\"pinyin\">\n                                    {word.pinyin}\n                                </div>\n                                <div className=\"entry-POS\">{word.partOfSpeech}</div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col s={12}>\n                                <div className=\"english-definition\">\n                                    {word.english}\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.words.map(word => this.renderWord(word))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words    \n    }\n}\n\n\nexport default connect(mapStateToProps)(WordCards)\n\n    ","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userWords.css'\nimport Header from \"./header.js\"\nimport WordCards from \"./wordCards.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserWords extends Component {\n    componentDidMount() {\n        this.props.getWords(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.words.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Words!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"words-read-words\" href=\"/user/words\">Read</Button>\n                                    <Button className=\"words-study-words\" href=\"/user/words/study\">Study</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <WordCards />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserWords)","import React from 'react';\nimport { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Card, Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal'\nimport './wordCardsStudy.css'\n\nclass WordCards extends Component{\n    constructor () {\n        super()\n\n        this.state = {\n            wordBack: {},\n            show: false\n        }\n    }\n\n    renderWord(word) {\n        return (\n            <Row>\n                <Col s={10}>\n                    <div>\n                        <Row>\n                            <Col md={2}></Col>\n                            <Col md={8}>\n                                <Card className=\"word-study-card\" onClick={event => {this.setState({ wordBack: word}); this.setState({show: true})}}>\n                                    <div class=\"card-body\">\n                                        {word.simplified}\n                                    </div>\n                                </Card>\n                            </Col>\n                            <Col md={2}></Col>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>    \n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                className=\"word-modal\"\n                id=\"word-modal\"\n                size={\"s\"} \n                show={this.state.show} \n                onHide={() => {this.setState({show:false})}}>\n                    <Modal.Body class=\"word-body\">\n                        <div>\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"simplified-traditional\">\n                                        <span className=\"simplified-char\">{this.state.wordBack.simplified}</span>\n                                        <span className=\"traditional-char\">({this.state.wordBack.traditional})</span>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"pinyin\">\n                                        {this.state.wordBack.pinyin}\n                                    </div>\n                                    <div className=\"entry-POS\">{this.state.wordBack.partOfSpeech}</div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12}>\n                                    <div className=\"english-definition\">\n                                        {this.state.wordBack.english}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                {this.props.words.map(word => this.renderWord(word))}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words    \n    }\n}\n\n\nexport default connect(mapStateToProps)(WordCards)\n\n    ","import React from 'react';\nimport { Component, Link } from 'react'\nimport { connect } from \"react-redux\"\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport './userWordsStudy.css'\nimport Header from \"./header.js\"\nimport WordCardsStudy from \"./wordCardsStudy.js\"\nimport * as actions from \"../actions/index.js\"\n\nclass UserWordsStudy extends Component {\n    componentDidMount() {\n        this.props.getWords(this.props.viewNum, this.props.startPost)\n    }\n\n    renderButtons() {\n        if (this.props.startPost > 9 && this.props.startPost <= 90 ) {\n            return (\n                <Row>\n                    <Col xs={1}></Col>\n                        <Col xs={10}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>\n                        </Col>\n                    <Col xs={1}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost < 10) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-more-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost + 10)); this.props.incrementPostNumber(this.props.viewNum); window.scrollTo(0, 0)}}>Next</Button>                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        } else if (this.props.startPost > 90) {\n            return (\n                <Row>\n                    <Col xs={2}></Col>\n                        <Col xs={8}>\n                            <Button className=\"words-less-words\" onClick={event => { this.props.getWords(this.props.viewNum, (this.props.startPost - 10)); this.props.decrementPostNumber(this.prps.viewNum); window.scrollTo(0, 0)}}>Back</Button>\n                        </Col>\n                    <Col xs={2}></Col>\n                </Row>  \n            )\n        }\n    }\n\n    render() {\n        if (this.props.words.length == 0) {\n            return (\n                <div>\n                    <Header />\n                    <Row>\n                        <Col xs={4}></Col>\n                        <Col xs={4}>\n                            <h2 className=\"loading\">Loading Words!</h2>\n                        </Col>\n                        <Col xs={4}></Col>\n                    </Row>\n                </div>\n            )} else {\n                return (\n                    <div>\n                        <Header />\n                        <Row>\n                            <Col xs={2}></Col>\n                                <Col xs={8}>\n                                    <Button className=\"study-read-words\" href=\"/user/words\">Read</Button>\n                                    <Button className=\"study-study-words\" href=\"/user/words/study\">Study</Button>\n                                </Col>\n                            <Col xs={2}></Col>\n                        </Row>  \n                        <WordCardsStudy />\n                        { this.renderButtons() }\n                    </div>\n                )\n            }\n        }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        words: state.words,\n        viewNum: state.viewNum,\n        startPost: state.startPost\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserWordsStudy)","import { GET_POSTS } from \"../actions/index.js\"\nimport { array } from \"prop-types\";\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n  }\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_POSTS:\n            state = []\n            state = action.payload.data\n            state = shuffle(state)\n            return state\n        default:\n            return state\n    }\n}","import { GET_POST_CLOZES, REMOVE_GUESSED_CLOZE, GET_USER_CLOZES } from \"../actions/index.js\"\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n  }\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_POST_CLOZES:\n            let newState = []\n            newState = action.payload.data\n            console.log(newState.clozedPosts[9])\n            if (newState.clozedPosts == undefined) {\n                newState = []\n                return newState\n            } else {\n                for (var i = 0; i < newState.posts.length; i ++) {\n                    newState.posts[i].postClozedTokenizedContent = newState.clozedPosts[i][0]\n                    let multipleChoiceWords = newState.clozedPosts[i][2]\n                    multipleChoiceWords.push(newState.clozedPosts[i][1][0])\n                    let removedWord = newState.clozedPosts[i][1]\n                    newState.posts[i].removedWord = removedWord[0]\n                    multipleChoiceWords = shuffle(multipleChoiceWords)\n                    newState.posts[i].multipleChoiceWords = multipleChoiceWords\n                }\n                return newState.posts\n            }\n        case GET_USER_CLOZES:\n                state = action.payload.data\n                if (state.clozedPosts == undefined) {\n                    state = []\n                    return state\n                } else {\n                    for (var i = 0; i < state.posts.length; i ++) {\n                        state.posts[i].postClozedTokenizedContent = state.clozedPosts[i][0]\n                        let removedWord = state.clozedPosts[i][1]\n                        let multipleChoiceWords = state.clozedPosts[i][2]\n                        multipleChoiceWords.push(state.clozedPosts[i][1][0])\n                        state.posts[i].removedWord = removedWord[0]\n                        multipleChoiceWords = shuffle(multipleChoiceWords)\n                        state.posts[i].multipleChoiceWords = multipleChoiceWords\n                    }\n                    return state.posts\n                }\n        case REMOVE_GUESSED_CLOZE:\n            let stateClozeRemove = []\n            stateClozeRemove = action.payload\n            return stateClozeRemove\n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\"\nimport PostsReducer from \"./postsReducer\"\nimport ViewNumReducer from \"./viewNumReducer\"\nimport PostCountReducer from \"./postCountReducer\"\nimport ClozeReducer from \"./clozeReducer\"\nimport SearchResultReducer from \"./searchResultReducer\"\nimport SearchTermReducer from \"./searchTermReducer\"\nimport WordReducer from \"./wordReducer\"\n\nconst rootReducer = combineReducers({\n    posts: PostsReducer,\n    clozes: ClozeReducer,\n    startPost: PostCountReducer,\n    viewNum: ViewNumReducer,\n    searchTerm: SearchTermReducer,\n    searchResult: SearchResultReducer,\n    words: WordReducer\n})\n\nexport default rootReducer","import { INCREMENT_POST_COUNT, DECREMENT_POST_COUNT } from \"../actions/index.js\"\n\nexport default function(state = 0, action) {\n    switch (action.type) {\n        case INCREMENT_POST_COUNT:\n            let incrementState = state + action.payload\n            return incrementState\n        case  DECREMENT_POST_COUNT:\n            let decrementState = state - action.payload\n            return decrementState\n        default:\n            return state\n    }\n\n}\n\n","import { SET_VIEW_NUM } from \"../actions/index\"\n\nexport default function(state = 10, action) {\n    switch (action.type) {\n        case SET_VIEW_NUM:\n            let newState = action.payload\n        default:\n            return state\n    }\n}","import { NEW_SEARCH_TERM } from \"../actions/index.js\"\n\nexport default function(state = \"\", action) {\n    switch(action.type) {\n        case NEW_SEARCH_TERM:\n            state = action.payload\n            return state\n        default:\n            return state\n    }\n}","import { WORD_SEARCH } from \"../actions/index.js\"\n\nexport default function(state = [], action) {\n    switch(action.type) {\n        case WORD_SEARCH:\n            state = action.payload.data\n            return state\n        default:\n            return state\n    }\n}","import { GET_WORDS } from \"../actions/index.js\"\n\nexport default function(state = [], action) {\n    switch (action.type) {\n        case GET_WORDS:\n            state = action.payload.data\n            console.log(action.payload.data)\n            return state\n        default:\n            return state\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport promise from \"redux-promise\";\nimport Posts from \"./components/posts.js\"\nimport SelectLevel from \"./components/selectLevel.js\"\nimport Login from \"./components/login.js\"\nimport PostClozes from \"./components/postClozes.js\"\nimport './index.css'\nimport UserPage from \"./components/userPage\"\nimport UserClozes from \"./components/userClozes\"\nimport UserWords from \"./components/userWords\"\nimport UserWordsStudy from \"./components/userWordsStudy\"\n\nimport rootReducer from \"./reducers/index.js\";\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(rootReducer)}>\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={SelectLevel} />\n          <Route exact path=\"/test\" component={Login} />\n          <Route exact path=\"/posts\" component={Posts} />\n          <Route exact path=\"/posts/clozes\" component={PostClozes} />\n          <Route exact path=\"/user\" component={UserPage} />\n          <Route exact path=\"/user/clozes\" component={UserClozes} />\n          <Route exact path=\"/user/words\" component={UserWords} />\n          <Route exact path=\"/user/words/study\" component={UserWordsStudy} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}